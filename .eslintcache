[{"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\index.js":"1","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Auth.js":"2","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\reducer.js":"3","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\App.js":"4","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\SignInCard.js":"5","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Navigation.js":"6","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\types.js":"7","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Table.js":"8","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\actions.js":"9","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Spinner\\Spinner.js":"10","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\TableHeader.js":"11","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Pagination.js":"12","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\PerPageSelector.js":"13","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\TableData.js":"14","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\firebase\\config.js":"15"},{"size":1096,"mtime":1612135795318,"results":"16","hashOfConfig":"17"},{"size":829,"mtime":1612131173071,"results":"18","hashOfConfig":"17"},{"size":6882,"mtime":1612136853408,"results":"19","hashOfConfig":"17"},{"size":642,"mtime":1612133637500,"results":"20","hashOfConfig":"17"},{"size":6762,"mtime":1612132441152,"results":"21","hashOfConfig":"17"},{"size":2165,"mtime":1612137230439,"results":"22","hashOfConfig":"17"},{"size":527,"mtime":1612117845169,"results":"23","hashOfConfig":"17"},{"size":733,"mtime":1612131001100,"results":"24","hashOfConfig":"17"},{"size":2578,"mtime":1612136350821,"results":"25","hashOfConfig":"17"},{"size":159,"mtime":1610998435474,"results":"26","hashOfConfig":"17"},{"size":1193,"mtime":1612133544424,"results":"27","hashOfConfig":"17"},{"size":1544,"mtime":1612137216492,"results":"28","hashOfConfig":"17"},{"size":1208,"mtime":1612137102381,"results":"29","hashOfConfig":"17"},{"size":1583,"mtime":1612136342780,"results":"30","hashOfConfig":"17"},{"size":229,"mtime":1612132472664,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jvzcag",{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\index.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Auth.js",["64","65","66","67"],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\reducer.js",["68","69"],"import { GET_MOVIES, WATCHED, NOT_WATCHED, FILTER_BY_VALUE, DATABASE_SET, SORT_BY, LOAD_EXACT_PAGE, MOVIES_PER_PAGE } from './types'\r\nimport firebase from 'firebase';\r\nimport { config } from '../firebase/config'\r\n\r\nlet path = localStorage.userId\r\n\r\nif (firebase.apps.length === 0) {\r\n    firebase.initializeApp(config);\r\n}\r\n\r\nconst initialState = {\r\n    movies: [],\r\n    filteredMovies: [],\r\n    filteredMoviesInit: [],\r\n    searching: false,\r\n    currentPage: 1,\r\n    countPerPage: '',\r\n    loading: true,\r\n    firstName: '',\r\n    appliedFilters: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_MOVIES:\r\n            let getState = Object.assign({}, state)\r\n            getState.movies = action.payload.data\r\n            getState.loading = false\r\n            getState.firstName = action.payload.firstName\r\n            getState.countPerPage = action.payload.countPerPage || 10\r\n            getState.currentCount = getState.countPerPage\r\n            getState.totalCount = action.payload.count\r\n            getState.currentPage = 1\r\n            getState.totalPages = Math.ceil(getState.totalCount / getState.countPerPage)\r\n            getState.filteredPages = Math.ceil(getState.totalCount / getState.countPerPage)\r\n            getState.upperCount = getState.countPerPage * getState.currentPage\r\n            getState.lowerCount = getState.upperCount - getState.countPerPage\r\n            getState.filteredMovies = getState.movies.slice(getState.lowerCount, getState.upperCount)\r\n\r\n            return getState\r\n\r\n        case WATCHED:\r\n            let watched = Object.assign({}, state);\r\n            watched.filteredMovies[action.payload].watched = !watched.filteredMovies[action.payload].watched\r\n            for (let i; i < watched.movies.length; i++) {\r\n                if (watched.movies[i].ranked === action.ranked)\r\n                    return watched.movies.watched = !watched.movies.watched\r\n            }\r\n\r\n            return watched\r\n\r\n        case FILTER_BY_VALUE:\r\n            let newState = Object.assign({}, state);\r\n            let value = action.payload.value;\r\n            let filteredMovies = state.movies.filter(movie => {\r\n                return movie.originalTitle.toLowerCase().includes(value)\r\n\r\n            });\r\n            let appliedFilters = state.appliedFilters;\r\n            if (value) {\r\n                newState.searching = true\r\n                newState.filteredMoviesInit = newState.movies.slice(newState.lowerCount, newState.upperCount)\r\n                appliedFilters = addFilterIfNotExists(FILTER_BY_VALUE, appliedFilters);\r\n                newState.filteredMovies = filteredMovies;\r\n                newState.filteredCount = newState.filteredMovies.length;\r\n                newState.filteredPages = Math.ceil(newState.filteredCount / newState.countPerPage);\r\n            } else {\r\n                newState.searching = false\r\n                appliedFilters = removeFilter(FILTER_BY_VALUE, appliedFilters);\r\n                if (appliedFilters.length === 0) {\r\n                    newState.filteredMovies = newState.filteredMoviesInit;\r\n                    newState.filteredCount = newState.filteredMovies.length;\r\n                    newState.filteredPages = Math.ceil(newState.filteredCount / newState.countPerPage);\r\n                }\r\n            }\r\n            console.log(newState)\r\n            return newState;\r\n\r\n        case SORT_BY:\r\n            const sortByAlphabetState = Object.assign({}, state);\r\n            let sortedAlphabetArr = action.order ?\r\n                sortAsc(sortByAlphabetState.filteredMovies, action.item) :\r\n                sortDesc(sortByAlphabetState.filteredMovies, action.item);\r\n            sortByAlphabetState.filteredMovies = sortedAlphabetArr;\r\n            console.log(action.payload)\r\n            console.log(sortByAlphabetState)\r\n            return sortByAlphabetState;\r\n\r\n        case LOAD_EXACT_PAGE:\r\n            const exactPageState = Object.assign({}, state);\r\n            const initMoviesLoad = exactPageState.movies\r\n            const exactPage = action.payload;\r\n            let upperCountExact = exactPageState.countPerPage * exactPage\r\n            let lowerCountExact = upperCountExact - exactPageState.countPerPage;\r\n            let exactMovies = exactPageState.movies.slice(lowerCountExact, upperCountExact);\r\n            exactPageState.filteredMovies = exactMovies;\r\n            exactPageState.currentCount = upperCountExact;\r\n            exactPageState.currentPage = exactPage;\r\n            window.history.pushState({ page: 1 }, \"title 1\", `?page=${exactPageState.currentPage}`);\r\n            exactPageState.movies = initMoviesLoad\r\n\r\n            return exactPageState;\r\n\r\n        case MOVIES_PER_PAGE:\r\n            const moviesPerPageState = Object.assign({}, state)\r\n            const initMoviesMPP = moviesPerPageState.movies\r\n            moviesPerPageState.currentPage = 1\r\n            moviesPerPageState.countPerPage = action.payload\r\n            moviesPerPageState.currentCount = moviesPerPageState.totalCount\r\n            moviesPerPageState.filteredPages = Math.ceil(moviesPerPageState.currentCount / moviesPerPageState.countPerPage)\r\n            moviesPerPageState.totalPages = moviesPerPageState.filteredPages\r\n            let currentPageMPP = moviesPerPageState.currentPage\r\n            let upperCountMPP = moviesPerPageState.countPerPage * currentPageMPP\r\n            let lowerCountMPP = upperCountMPP - moviesPerPageState.countPerPage;\r\n            let exactMPP = moviesPerPageState.movies.slice(lowerCountMPP, upperCountMPP);\r\n            moviesPerPageState.filteredMovies = exactMPP;\r\n            moviesPerPageState.currentCount = upperCountMPP;\r\n            moviesPerPageState.movies = initMoviesMPP\r\n\r\n            return moviesPerPageState\r\n\r\n        case DATABASE_SET:\r\n            databaseSet(state.movies)\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nfunction addFilterIfNotExists(filter, appliedFilters) {\r\n    let index = appliedFilters.indexOf(filter);\r\n    if (index === -1) appliedFilters.push(filter);\r\n\r\n    return appliedFilters;\r\n}\r\n\r\nfunction removeFilter(filter, appliedFilters) {\r\n    let index = appliedFilters.indexOf(filter);\r\n    appliedFilters.splice(index, 1);\r\n    return appliedFilters;\r\n}\r\n\r\nfunction databaseSet(movies) {\r\n    return firebase.database().ref(path + \"/\").update(movies)\r\n}\r\n\r\nfunction sortAsc(arr, field) {\r\n    return arr.sort(function (a, b) {\r\n        if (a[field] > b[field]) {\r\n            return 1;\r\n        }\r\n        if (b[field] > a[field]) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    })\r\n}\r\n\r\nfunction sortDesc(arr, field) {\r\n    return arr.sort(function (a, b) {\r\n        if (a[field] > b[field]) return -1;\r\n\r\n        if (b[field] > a[field]) return 1;\r\n\r\n        return 0;\r\n    })\r\n}",["70","71"],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\App.js",["72"],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\SignInCard.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Navigation.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\types.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Table.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\actions.js",["73"],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Spinner\\Spinner.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\TableHeader.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Pagination.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\PerPageSelector.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\TableData.js",["74","75","76"],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\firebase\\config.js",[],{"ruleId":"77","severity":1,"message":"78","line":9,"column":6,"nodeType":"79","messageId":"80","endLine":9,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":9,"column":14,"nodeType":"79","messageId":"80","endLine":9,"endColumn":23},{"ruleId":"77","severity":1,"message":"82","line":10,"column":8,"nodeType":"79","messageId":"80","endLine":10,"endColumn":15},{"ruleId":"77","severity":1,"message":"83","line":11,"column":6,"nodeType":"79","messageId":"80","endLine":11,"endColumn":16},{"ruleId":"77","severity":1,"message":"84","line":1,"column":31,"nodeType":"79","messageId":"80","endLine":1,"endColumn":42},{"ruleId":"85","severity":1,"message":"86","line":23,"column":1,"nodeType":"87","endLine":130,"endColumn":2},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":16,"column":5,"nodeType":"94","endLine":16,"endColumn":7,"suggestions":"95"},{"ruleId":"77","severity":1,"message":"84","line":1,"column":21,"nodeType":"79","messageId":"80","endLine":1,"endColumn":32},{"ruleId":"77","severity":1,"message":"96","line":9,"column":9,"nodeType":"79","messageId":"80","endLine":9,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":34,"column":28,"nodeType":"99","endLine":34,"endColumn":77},{"ruleId":"97","severity":1,"message":"98","line":34,"column":96,"nodeType":"99","endLine":34,"endColumn":145},"no-unused-vars","'isAuth' is assigned a value but never used.","Identifier","unusedVar","'setIsAuth' is assigned a value but never used.","'loading' is assigned a value but never used.","'authMovies' is assigned a value but never used.","'NOT_WATCHED' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["102"],"'state' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [dispatch]",{"range":"105","text":"106"},[489,491],"[dispatch]"]