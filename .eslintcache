[{"C:\\React\\react-movies-database-main\\src\\index.js":"1","C:\\React\\react-movies-database-main\\src\\App.js":"2","C:\\React\\react-movies-database-main\\src\\redux\\reducer.js":"3","C:\\React\\react-movies-database-main\\src\\SignIn\\Auth.js":"4","C:\\React\\react-movies-database-main\\src\\redux\\actions.js":"5","C:\\React\\react-movies-database-main\\src\\redux\\types.js":"6","C:\\React\\react-movies-database-main\\src\\Spinner\\Spinner.js":"7","C:\\React\\react-movies-database-main\\src\\firebase\\config.js":"8","C:\\React\\react-movies-database-main\\src\\Navigation\\Pagination.js":"9","C:\\React\\react-movies-database-main\\src\\Navigation\\PerPageSelector.js":"10","C:\\React\\react-movies-database-main\\src\\AddMovie\\AddMovie.js":"11","C:\\React\\react-movies-database-main\\src\\AddMovie\\AddInput.js":"12","C:\\React\\react-movies-database-main\\src\\Table\\MaterialTable.js":"13","C:\\React\\react-movies-database-main\\src\\UserProfile\\UserPage.js":"14","C:\\React\\react-movies-database-main\\src\\Home\\Home.js":"15","C:\\React\\react-movies-database-main\\src\\Navigation\\Navbar.js":"16","C:\\React\\react-movies-database-main\\src\\Table\\FullTable.js":"17","C:\\React\\react-movies-database-main\\src\\Table\\MT.js":"18","C:\\React\\react-movies-database-main\\src\\SignIn\\SignInBackend.js":"19","C:\\React\\react-movies-database-main\\src\\SignIn\\UpdatePassword.js":"20","C:\\React\\react-movies-database-main\\src\\Home\\Carousel.js":"21","C:\\React\\react-movies-database-main\\src\\Home\\slides.js":"22","C:\\React\\react-movies-database-main\\src\\Spinner\\Warning.js":"23","C:\\React\\react-movies-database-main\\src\\Spinner\\Avatars.js":"24","C:\\React\\react-movies-database-main\\src\\Navigation\\Drawer.js":"25","C:\\React\\react-movies-database-main\\src\\Spinner\\ThemeSelector.js":"26"},{"size":954,"mtime":1617017386173,"results":"27","hashOfConfig":"28"},{"size":1966,"mtime":1617443322681,"results":"29","hashOfConfig":"28"},{"size":6691,"mtime":1617444124433,"results":"30","hashOfConfig":"28"},{"size":616,"mtime":1617563062912,"results":"31","hashOfConfig":"28"},{"size":8771,"mtime":1617562952657,"results":"32","hashOfConfig":"28"},{"size":1437,"mtime":1617050275725,"results":"33","hashOfConfig":"28"},{"size":819,"mtime":1613475450654,"results":"34","hashOfConfig":"28"},{"size":445,"mtime":1612372276242,"results":"35","hashOfConfig":"28"},{"size":1738,"mtime":1616095781160,"results":"36","hashOfConfig":"28"},{"size":1347,"mtime":1616091407925,"results":"37","hashOfConfig":"28"},{"size":1560,"mtime":1616527948418,"results":"38","hashOfConfig":"28"},{"size":5206,"mtime":1616249624845,"results":"39","hashOfConfig":"28"},{"size":9648,"mtime":1617051462332,"results":"40","hashOfConfig":"28"},{"size":7598,"mtime":1617564173607,"results":"41","hashOfConfig":"28"},{"size":1213,"mtime":1617444477226,"results":"42","hashOfConfig":"28"},{"size":9083,"mtime":1617051621805,"results":"43","hashOfConfig":"28"},{"size":1050,"mtime":1617444486474,"results":"44","hashOfConfig":"28"},{"size":5425,"mtime":1613419742393,"results":"45","hashOfConfig":"28"},{"size":4903,"mtime":1616420645909,"results":"46","hashOfConfig":"28"},{"size":2394,"mtime":1615765222963,"results":"47","hashOfConfig":"28"},{"size":1475,"mtime":1616532400578,"results":"48","hashOfConfig":"28"},{"size":867,"mtime":1616244194873,"results":"49","hashOfConfig":"28"},{"size":1676,"mtime":1616503444065,"results":"50","hashOfConfig":"28"},{"size":1150,"mtime":1617556200068,"results":"51","hashOfConfig":"28"},{"size":4101,"mtime":1617444930346,"results":"52","hashOfConfig":"28"},{"size":2647,"mtime":1617445270362,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"ubyny5",{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"57"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"57"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"57"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"57"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},"C:\\React\\react-movies-database-main\\src\\index.js",["126","127"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './App';\r\nimport reducer from './redux/reducer';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {Provider} from 'react-redux'\r\nimport firebase from 'firebase';\r\nimport { config } from './firebase/config'\r\n\r\nconsole.warn = console.error = () => {};\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n",["128","129"],"C:\\React\\react-movies-database-main\\src\\App.js",["130"],"import React, { useEffect } from 'react';\r\nimport {BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Home from './Home/Home'\r\nimport Auth from './SignIn/Auth'\r\nimport AddMovie from './AddMovie/AddMovie'\r\nimport UserPage from './UserProfile/UserPage';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Spinner from './Spinner/Spinner'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { getMovies, getUser} from './redux/actions'\r\nimport UpdatePassword from './SignIn/UpdatePassword';\r\n\r\nconst App = () => {\r\nconst dispatch = useDispatch()\r\nconst loading = useSelector(state => state.loading)\r\nconst darkMode = useSelector(state => state.darkMode)\r\nconsole.log(darkMode)\r\n\r\nconsole.warn = console.error = () => {};\r\n\r\n  let mode = darkMode ? '(prefers-color-scheme: dark)' : '(prefers-color-scheme: light)'\r\n  const prefersDarkMode = useMediaQuery(mode)\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: prefersDarkMode ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [prefersDarkMode],\r\n  );\r\n    useEffect(() => {\r\n        dispatch(getUser())\r\n        dispatch(getMovies())\r\n    }, [])\r\n\r\nreturn (\r\n  loading ? <Spinner/> : <div styles = {{height: '100vh'}}>\r\n  <Paper height=\"100%\">\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline/>\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path={'/auth'} component={Auth} />\r\n        <Route path={'/password'} component={UpdatePassword} />\r\n        <Route path={'/add-movie'} component={AddMovie} />\r\n        <Route path={'/user-page'} component={UserPage} />\r\n        <Route path={'/'} component={Home} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n    </ThemeProvider>\r\n    </Paper>\r\n    </div>\r\n      )\r\n}\r\n\r\nexport default App;\r\n\r\n","C:\\React\\react-movies-database-main\\src\\redux\\reducer.js",["131","132","133","134"],"import { GET_MOVIES, SET_WATCHED, FILTER_BY_VALUE, RELOAD_MOVIES, SET_USER, SORT_BY, WARNING, CLEAR_WARNING, GET_USER, SET_RATING, SET_UNWATCHED, SET_RECENT, UNSET_RECENT } from './types'\r\n\r\nconst initialState = {\r\n    movies: [],\r\n    filteredMovies: [],\r\n    searching: false,\r\n    currentPage: 1,\r\n    countPerPage: '',\r\n    loading: true,\r\n    firstName: '',\r\n    goToFirstPage:'',\r\n    goToNextPage: '',\r\n    goToLastPage: '',\r\n    appliedFilters: [],\r\n    darkMode: false\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_MOVIES:\r\n            let getState = Object.assign({}, state)\r\n            getState.loading = true\r\n            getState.movies = action.payload.data \r\n            getState.filteredMovies = action.payload.data \r\n            getState.countPerPage = action.payload.countPerPage\r\n            getState.totalCount = action.payload.total\r\n            getState.currentPage = action.payload.currentPage\r\n            getState.totalPages = action.payload.totalPages\r\n            getState.goToFirstPage = action.payload.goToFirstPage\r\n            getState.goToNextPage = action.payload.goToNextPage\r\n            getState.goToLastPage = action.payload.goToLastPage\r\n            getState.loading = false\r\n\r\n            return getState\r\n        \r\n        case RELOAD_MOVIES:\r\n            let reloadState = Object.assign({}, state)\r\n            reloadState.movies = action.payload.data \r\n            reloadState.filteredMovies = action.payload.data \r\n            return reloadState\r\n\r\n        case GET_USER:\r\n            \r\n            let getUserState = Object.assign({}, state)\r\n            console.log(state)\r\n            getUserState.loading = true\r\n            getUserState.firstName = action.payload.firstName\r\n            getUserState.lastName = action.payload.lastName\r\n            getUserState.email = action.payload.email\r\n            getUserState.recent = action.payload.movies.reverse().slice(0, 5)\r\n            getUserState.userId = action.payload.id\r\n            getUserState.themeStyle = {\r\n               background: action.payload.background}\r\n            getUserState.themeColor = action.payload.color\r\n            getUserState.darkMode = action.payload.darkMode\r\n            getUserState.loading = false\r\n\r\n            return getUserState\r\n\r\n        case SET_USER:\r\n            let setUserState = Object.assign({}, state)\r\n            console.log(action.payload)\r\n            setUserState.themeStyle = {\r\n               background: action.payload.background}\r\n            setUserState.themeColor = action.payload.color\r\n            setUserState.darkMode = action.payload.dark_mode\r\n\r\n            return setUserState\r\n\r\n        case SET_RECENT:\r\n            let setRecentMoviesState = Object.assign({}, state)\r\n            for(let i=0; i<setRecentMoviesState.movies.length; i++)\r\n            {   \r\n                if (setRecentMoviesState.movies[i].id === action.payload.id) {\r\n                    setRecentMoviesState.recent.unshift(setRecentMoviesState.movies[i])\r\n                }\r\n            }\r\n            setRecentMoviesState.recent = setRecentMoviesState.recent.slice(0, 5)\r\n\r\n            return setRecentMoviesState\r\n        \r\n        case UNSET_RECENT:\r\n            let unsetRecentMoviesState = Object.assign({}, state)\r\n            unsetRecentMoviesState.recent = action.payload.movies.reverse().slice(0, 5)\r\n            \r\n            return unsetRecentMoviesState\r\n        \r\n        case SET_RATING:\r\n            let setRatingState = Object.assign({}, state)\r\n            for(let i=0; i<setRatingState.filteredMovies.length; i++)\r\n            {\r\n                if (setRatingState.filteredMovies[i].title === action.payload.title){\r\n                    setRatingState.filteredMovies[i].rating = action.payload.rating\r\n                }\r\n            }\r\n\r\n            return setRatingState\r\n\r\n        case SET_WATCHED:\r\n            let watchedState = Object.assign({}, state);\r\n            console.log(watchedState)\r\n            for(let i=0; i<watchedState.filteredMovies.length; i++)\r\n            {\r\n                if (watchedState.filteredMovies[i].title === action.payload.title){\r\n                    watchedState.filteredMovies[i].watched = true\r\n                    watchedState.filteredMovies[i].rating = null\r\n                }\r\n            }\r\n            return watchedState\r\n\r\n        case SET_UNWATCHED:\r\n            let unwatchedState = Object.assign({}, state);\r\n            for(let i=0; i<unwatchedState.filteredMovies.length; i++)\r\n            {\r\n                if (unwatchedState.filteredMovies[i].title === action.payload.title){\r\n                    unwatchedState.filteredMovies[i].watched = false\r\n                    unwatchedState.filteredMovies[i].rating = null\r\n                }\r\n            }\r\n            return unwatchedState\r\n            \r\n        case WARNING:\r\n            let warningState = Object.assign({}, state);\r\n            warningState.warning =  action.payload.type\r\n            warningState.watchedMovie = action.payload.title\r\n\r\n            return warningState\r\n\r\n        case CLEAR_WARNING:\r\n            let clearWarningState = Object.assign({}, state);\r\n            clearWarningState.warning = null\r\n            clearWarningState.watchedMovie = null\r\n\r\n            return clearWarningState\r\n\r\n        case FILTER_BY_VALUE:\r\n            let newState = Object.assign({}, state);\r\n            if (action.payload.value){\r\n            newState.searching = true\r\n            newState.filteredMovies = action.payload.filtered}\r\n            else \r\n            newState.filteredMovies =  newState.movies\r\n            newState.searching = false\r\n\r\n            return newState;\r\n\r\n        // case SORT_BY:\r\n        //     const sortByAlphabetState = Object.assign({}, state);\r\n        //     console.log(action)\r\n        //     console.log(sortByAlphabetState)\r\n        //     let sortedAlphabetArr = action.order ?\r\n        //         sortAsc(sortByAlphabetState.movies, action.item) :\r\n        //         sortDesc(sortByAlphabetState.movies, action.item);\r\n        //     sortByAlphabetState.filteredMovies = sortedAlphabetArr;\r\n        //     return sortByAlphabetState;\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nfunction sortAsc(arr, field) {\r\n    return arr.sort(function (a, b) {\r\n        if (a[field] > b[field]) {\r\n            return 1;\r\n        }\r\n        if (b[field] > a[field]) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    })\r\n}\r\n\r\nfunction sortDesc(arr, field) {\r\n    return arr.sort(function (a, b) {\r\n        if (a[field] > b[field]) return -1;\r\n\r\n        if (b[field] > a[field]) return 1;\r\n\r\n        return 0;\r\n    })\r\n}","C:\\React\\react-movies-database-main\\src\\SignIn\\Auth.js",[],"C:\\React\\react-movies-database-main\\src\\redux\\actions.js",["135"],"import {GET_MOVIES, SET_RATING, USERS_ERROR, DATE, GET_USER, FILTER_BY_VALUE, SET_USER, RELOAD_MOVIES, WARNING, LOAD_EXACT_PAGE, SORT_BY, CLEAR_WARNING, SET_WATCHED, SET_RECENT, SET_UNWATCHED, UNSET_RECENT} from './types'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nexport const getMovies = (pgNumber, perPage) => async dispatch => {\r\n    const request = {\r\n        perPage: perPage,\r\n        userId: localStorage.userId\r\n    }\r\n    try{\r\n    if(localStorage.isAuth){\r\n        axios.post('http://127.0.0.1:8000/api/movies/get?page=' + pgNumber, request)\r\n        .then(response => {\r\n            dispatch({\r\n            type: GET_MOVIES,\r\n            payload: {\r\n                data: response.data.data,\r\n                total: response.data.total,\r\n                currentPage: response.data.current_page,\r\n                totalPages: response.data.last_page,\r\n                countPerPage: response.data.per_page,\r\n                goToFirstPage: response.data.first_page_url,\r\n                goToNextPage: response.data.next_page_url,\r\n                goToLastPage: response.data.last_page_url,\r\n        }\r\n        })\r\n        axios.get('http://127.0.0.1:8000/api/users/' + localStorage.userId)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch({\r\n            type: GET_USER,\r\n            payload: {\r\n                firstName: response.data.first_name,\r\n                lastName: response.data.last_name,\r\n                email: response.data.email,\r\n                movies: response.data.movies,\r\n                userId: response.data.id,\r\n                darkMode: response.data.dark_mode,\r\n                color: response.data.color,\r\n                background: response.data.background\r\n                }\r\n            })\r\n        })\r\n    })\r\n}\r\n    else {\r\n        axios.post('http://127.0.0.1:8000/api/movies/get?page=' + pgNumber, request).then(response => {\r\n            console.log(response)\r\n            dispatch({\r\n                type: GET_MOVIES,\r\n                payload: {\r\n                    data: response.data.data,\r\n                    total: response.data.total,\r\n                    currentPage: response.data.current_page,\r\n                    totalPages: response.data.last_page,\r\n                    countPerPage: response.data.per_page,\r\n                    goToFirstPage: response.data.first_page_url,\r\n                    goToNextPage: response.data.next_page_url,\r\n                    goToLastPage: response.data.last_page_url,\r\n                }\r\n            })\r\n        })\r\n    }}\r\ncatch(e){\r\n    dispatch( {\r\n        type: USERS_ERROR,\r\n        payload: console.log(e),\r\n    })\r\n}}\r\n\r\nexport const reloadMovies = (pgNumber, perPage)=> async dispatch =>{\r\n    const request = {\r\n        perPage: perPage,\r\n        userId: localStorage.userId\r\n    }\r\n    axios.post('http://127.0.0.1:8000/api/movies/get?page=' + pgNumber, request)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch({\r\n                type: GET_MOVIES,\r\n                payload: {\r\n                    data: response.data.data,\r\n                    total: response.data.total,\r\n                    currentPage: response.data.current_page,\r\n                    totalPages: response.data.last_page,\r\n                    countPerPage: response.data.per_page,\r\n                    goToFirstPage: response.data.first_page_url,\r\n                    goToNextPage: response.data.next_page_url,\r\n                    goToLastPage: response.data.last_page_url,\r\n                }\r\n        })\r\n    })\r\n}\r\n\r\nexport const setPerPage = payload => {\r\n    axios.post('http://127.0.0.1:8000/api/movies/page', {perPage: payload})\r\n    .then(response => {\r\n        console.log(response)\r\n    })\r\n}\r\n\r\nexport const setRatingDatabase = (id, rating, title)=> async dispatch =>{\r\n    const request = {\r\n        movie_id: id,\r\n        user_id: localStorage.userId,\r\n        rating: rating\r\n    }\r\n    axios.post('http://127.0.0.1:8000/api/users/rating', request)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch({\r\n            type: SET_RATING,\r\n            payload: {\r\n                id: response.data.id,\r\n                rating: response.data.rating,\r\n                title: title\r\n        }\r\n        })\r\n    })\r\n}\r\n\r\nexport const setWatchedDatabase = (id, title)=> async dispatch =>{\r\n    const request ={\r\n        movie_id: id,\r\n        user_id: localStorage.userId\r\n      }\r\n    axios.post('http://127.0.0.1:8000/api/users/watched', request).then(response=>{\r\n        console.log(response)\r\n        dispatch({\r\n            type: SET_WATCHED,\r\n            payload: {\r\n                id: response.data.id,\r\n                title: title\r\n        }\r\n        })\r\n    })\r\n}\r\n\r\nexport const setUnwatchedDatabase = (id, title) => async dispatch => {\r\n    const request = {\r\n        movie_id: id,\r\n        user_id: localStorage.userId\r\n    }\r\n    axios.post('http://127.0.0.1:8000/api/users/watched_delete', request).then(response => {\r\n        dispatch({\r\n            type: SET_UNWATCHED,\r\n            payload: {\r\n                id: response.data.id,\r\n                title: title\r\n            }\r\n        })\r\n        axios.get('http://127.0.0.1:8000/api/users/' + localStorage.userId)\r\n            .then(response => {\r\n                console.log(response)\r\n                dispatch({\r\n                    type: UNSET_RECENT,\r\n                    payload: {\r\n                        movies: response.data.movies,\r\n                    }\r\n                })\r\n            })\r\n    })\r\n\r\n}\r\n\r\nexport const setRecent = (id, title) =>{\r\n    return dispatch => dispatch({\r\n            type: SET_RECENT,\r\n            payload: {\r\n                id: id,\r\n                title: title\r\n        }\r\n        })\r\n}\r\n\r\nexport const getUser = () => async dispatch  => {\r\n    try{\r\n        if(localStorage.isAuth){\r\n        axios.get('http://127.0.0.1:8000/api/users/' + localStorage.userId)\r\n        .then(response => {\r\n            dispatch({\r\n            type: GET_USER,\r\n            payload: {\r\n                firstName: response.data.first_name,\r\n                lastName: response.data.last_name,\r\n                movies: response.data.movies,\r\n                email: response.data.email,\r\n                userId: response.data.id,\r\n                darkMode: response.data.dark_mode,\r\n                color: response.data.color,\r\n                background: response.data.background\r\n            }\r\n        })\r\n    })\r\n}\r\nelse {\r\n    axios.get('http://127.0.0.1:8000/api/users/' + localStorage.userId)\r\n    .then(response => {\r\n        dispatch({\r\n            type: GET_USER,\r\n            payload: response.data\r\n        })\r\n    })\r\n}}\r\ncatch(e){\r\n   console.log(e)\r\n    }\r\n}\r\n\r\n\r\nexport const setUser= (payload) =>{\r\n    console.log(payload)\r\n    axios.put('http://127.0.0.1:8000/api/users/' + localStorage.userId, payload)\r\n    .then(response=>console.log(response))\r\n    return dispatch => dispatch({\r\n        type: SET_USER,\r\n        payload\r\n    })\r\n}\r\n\r\nexport const warning = (type, title) =>{\r\n    console.log(title)\r\n    return dispatch => dispatch({\r\n        type: WARNING,\r\n        payload:{\r\n            type: type,\r\n            title: title\r\n        }\r\n    })\r\n}\r\n\r\nexport const clearWarning = () =>{\r\n    return dispatch => dispatch({\r\n        type: CLEAR_WARNING,\r\n    })\r\n}\r\n\r\nexport const filterByValue = payload => ({\r\n    type: FILTER_BY_VALUE,\r\n    payload\r\n});\r\n\r\nexport const sortBy = (item, order) => {\r\n     return dispatch => dispatch({\r\n         type: SORT_BY,\r\n         item: item,\r\n         order: order\r\n        })\r\n    }\r\n\r\nexport const loadExactPage = pgNumber => {\r\n    return dispatch => {\r\n        dispatch({\r\n        type: LOAD_EXACT_PAGE,\r\n        payload: pgNumber\r\n    })}\r\n}\r\n\r\n\r\n\r\n// export const setFirstName = firstName => {\r\n//     return dispatch =>{\r\n//         dispatch({\r\n//             type: SET_FIRST_NAME,\r\n//             payload: firstName\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const addNewMovie = newMovie => {\r\n    const movie = {\r\n        title: newMovie.originalTitle,\r\n        imdbRating: newMovie.imdbRating,\r\n        year: newMovie.year\r\n\r\n    }\r\n    return axios.post('http://127.0.0.1:8000/api/movies', movie)\r\n    .then(response=>{\r\n        const actors = {\r\n            firstActor: newMovie.firstActor,\r\n            secondActor: newMovie.secondActor,\r\n            thirdActor: newMovie.thirdActor,\r\n            type: 'Movie',\r\n            id: response.id\r\n        }\r\n        axios.post('http://127.0.0.1:8000/api/actors', actors)\r\n        .then(response=>console.log(response))\r\n    })\r\n}\r\n\r\nexport const userBirthday = date => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: DATE,\r\n            date\r\n        })\r\n    }\r\n}","C:\\React\\react-movies-database-main\\src\\redux\\types.js",[],"C:\\React\\react-movies-database-main\\src\\Spinner\\Spinner.js",[],"C:\\React\\react-movies-database-main\\src\\firebase\\config.js",[],"C:\\React\\react-movies-database-main\\src\\Navigation\\Pagination.js",["136","137"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loadExactPage, getMovies } from '../redux/actions'\nimport \"bulma/css/bulma.min.css\"\n\nconst Pagination = () => {\n    const dispatch = useDispatch()\n    const currentPage = useSelector(state => state.currentPage)\n    const countPerPage = useSelector(state => state.countPerPage)\n    const totalPages = useSelector(state => state.totalPages)\n    const searching = useSelector(state =>state.searching)\n    const themeColor = useSelector(state => state.themeColor)\n    const pageNumbers = [];\n\n\n    const isActive = number => {\n        if (number === currentPage) {\n            return 'active'\n        }\n    }\n\n\n    for (let i=1; i<= totalPages; i++ ) {\n        pageNumbers.push(i)\n    }\n    return (\n        !searching ? <nav>\n            <ul className='pagination is-small'>\n                {pageNumbers.map((number, index) => (\n                    <li key={number} className={'page-item ' + isActive(number, countPerPage)}>\n                        <button \n                        className={`button pagination-link ${\n                            currentPage === index + 1\n                              ? themeColor===\"red\" ? \"is-danger\" :  themeColor===\"green\" ? \"is-success\" : \"is-current\"\n                              : \"\"\n                          }`}\n                          aria-label=\"Page 1\"\n                          onClick={() => dispatch(getMovies(number, countPerPage))}\n                          aria-current=\"stole\"\n                        >\n                          {number}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav> : null\n    )\n}\n\nexport default Pagination\n","C:\\React\\react-movies-database-main\\src\\Navigation\\PerPageSelector.js",["138","139"],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMovies, setPerPage } from '../redux/actions'\nimport \"bulma/css/bulma.min.css\"\n\nconst PerPageSelector = () => {\n  const countPerPage = useSelector(state => state.countPerPage)\n  const currentPage = useSelector(state => state.currentPage)\n  const totalCount = useSelector(state => state.totalCount)\n  const filtered = useSelector(state => state.movies)\n  const searching = useSelector(state =>state.searching)\n  const dispatch = useDispatch()\n\n  if(!searching){\n    return (\n      <div class=\"select mt-2 is-small\">\n      <select value={countPerPage} onChange={event => dispatch(getMovies(1, parseInt(event.target.value)))} >\n          {\n            [10, 25, 50, 100, totalCount].map(pageSize => (\n              <option key={pageSize} value={pageSize}>\n                Show: {pageSize}\n              </option>\n            ))\n          }\n        </select>\n      </div>\n      )\n      }\n      else {\n        return (\n          <select value={filtered.length} onChange={event => dispatch(getMovies(1, parseInt(event.target.value)))} >\n          {\n              <option key={filtered.length} value={filtered.length}>\n                Show: {filtered.length}\n              </option>\n          }\n        </select>\n        )\n  }\n\n}\n\nexport default PerPageSelector;","C:\\React\\react-movies-database-main\\src\\AddMovie\\AddMovie.js",["140","141","142"],"import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMovies, getDarkMode, getUser } from '../redux/actions'\r\nimport \"bulma/css/bulma.min.css\"\r\nimport Navbar from '../Navigation/Navbar';\r\nimport AddInput from './AddInput'\r\nimport MaterialTable from '../Table/MaterialTable';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst AddMovie = () => {\r\n    const state = useSelector(state => state)// in order for re-rendering of the table to work\r\n    const themeColor = useSelector(state => state.themeColor)\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        dispatch(getUser())\r\n        dispatch(getMovies())\r\n    }, [])\r\n\r\n    return (\r\n        localStorage.isAuth ?\r\n            <div style={{ padding: \"3%\" }}>\r\n                <Navbar />\r\n                <div style={{\r\n                    textAlign: 'center',\r\n                    margin: 'auto',\r\n                    width: '80%',\r\n                    padding: '10px'\r\n                }}>\r\n                    <Box mt={+1}>\r\n                        <AddInput />\r\n                    </Box>\r\n                    <Box mt={+8} >\r\n                    <div style={{ border: themeColor==='red' ? '2px solid red ' : themeColor==='blue' ? '2px solid darkblue ' :  '2px solid green ' }}>\r\n                            <MaterialTable />\r\n                        </div>\r\n                    </Box>\r\n                </div> </div> : <Redirect to={'/auth'} />\r\n    )\r\n}\r\n\r\nexport default AddMovie;","C:\\React\\react-movies-database-main\\src\\AddMovie\\AddInput.js",["143","144","145"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Box from '@material-ui/core/Box';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useDispatch} from 'react-redux';\r\nimport { addNewMovie } from '../redux/actions'\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nconst AddInput = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  let [newMovie, setNewMovie] = useState({\r\n    actors: ['Stojanco Sarafimov', 'Stoci'],\r\n    imdbRating: '',\r\n    originalTitle: '',\r\n    year: '',\r\n   //watched: null\r\n  })\r\n\r\n  const addMovieRating = (event) => {\r\n    setNewMovie({\r\n      ...newMovie,\r\n      imdbRating: event.target.value\r\n    })\r\n  }\r\n  const addMovieTitle = (event) => {\r\n    setNewMovie({\r\n      ...newMovie,\r\n      originalTitle: event.target.value\r\n    })\r\n  }\r\n  const addMovieYear = (event) => {\r\n    setNewMovie({\r\n      ...newMovie,\r\n      year: event.target.value\r\n    })\r\n  }\r\n  const addFirstMainActor = (event) => {\r\n    setNewMovie({\r\n      ...newMovie,\r\n      firstActor: event.target.value\r\n    })\r\n  }\r\n  const addSecondMainActor = (event) => {\r\n    setNewMovie({\r\n      ...newMovie,\r\n      secondActor: event.target.value\r\n    })\r\n  }\r\n  const addThirdMainActor = (event) => {\r\n    setNewMovie({\r\n      ...newMovie,\r\n      thirdActor: event.target.value\r\n    })\r\n  }\r\n  const inputNewMovie = () => {\r\n    const movie = {\r\n      title: newMovie.originalTitle,\r\n      imdbRating: newMovie.imdbRating,\r\n      year: newMovie.year\r\n  }\r\n  // axios({\r\n  //   method: 'post',\r\n  //   url: 'http://127.0.0.1:8000/api/movies',\r\n  //   data: qs.stringify({\r\n  //     title: newMovie.originalTitle,\r\n  //     imdbRating: newMovie.imdbRating,\r\n  //     year: newMovie.year,\r\n  //   }),\r\n  //   headers: {\r\n  //     'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n  //   }\r\n  // })\r\n  axios.post('http://127.0.0.1:8000/api/movies', movie)\r\n  .then(response=>{\r\n    const id= response.data.id\r\n      let actors = {\r\n          actor: newMovie.firstActor,\r\n          type: 'Movies',\r\n          id: id\r\n      }\r\n     return axios.post('http://127.0.0.1:8000/api/actors', actors)\r\n       .then(response=>{\r\n         actors = {\r\n          actor: newMovie.secondActor,\r\n          type: 'Movies',\r\n          id: id\r\n      }\r\n     return axios.post('http://127.0.0.1:8000/api/actors', actors)\r\n       .then(response=>{\r\n         actors = {\r\n          actor: newMovie.thirdActor,\r\n          type: 'Movies',\r\n          id: id\r\n      }\r\n     return axios.post('http://127.0.0.1:8000/api/actors', actors)\r\n        })\r\n       })\r\n     })\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.value === \"Watched\") {\r\n      setNewMovie({\r\n        ...newMovie,\r\n        watched: true\r\n      })\r\n    }\r\n    else {\r\n      setNewMovie({\r\n        ...newMovie,\r\n        watched: false\r\n      })\r\n    }\r\n  }\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField id=\"outlined-basic\" label=\"IMDB Rating...\" variant=\"outlined\" onChange={addMovieRating} />\r\n        <TextField id=\"outlined-basic\" label=\"Movie Title...\" variant=\"outlined\" onChange={addMovieTitle} />\r\n        <TextField id=\"outlined-basic\" label=\"Year...\" variant=\"outlined\" onChange={addMovieYear} />\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">Select Watched...</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-outlined-label\"\r\n            id=\"demo-simple-select-outlined\"\r\n            onChange={handleChange}\r\n            label=\"Watched\"\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            <MenuItem value={\"Watched\"}>Watched</MenuItem>\r\n            <MenuItem value={\"Not Watched\"}>Not Watched</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField id=\"outlined-basic\" label=\"Main Actors...\" variant=\"outlined\" onChange={addFirstMainActor} />\r\n        <TextField id=\"outlined-basic\" label=\"Main Actors...\" variant=\"outlined\" onChange={addSecondMainActor} />\r\n        <TextField id=\"outlined-basic\" label=\"Main Actors...\" variant=\"outlined\" onChange={addThirdMainActor} />\r\n      </form>\r\n      <Box mt={+2} >\r\n        <Button variant=\"contained\" onClick={inputNewMovie}>Add Movie</Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n \r\n}\r\nAddInput.propTypes = {\r\n  newMovie: PropTypes.shape({\r\n    originalTitle: PropTypes.string.isRequired,\r\n    imdbRating: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    watched: PropTypes.bool.isRequired\r\n  }).isRequired,\r\n}\r\n\r\nexport default AddInput","C:\\React\\react-movies-database-main\\src\\Table\\MaterialTable.js",["146","147","148","149","150","151","152","153"],"import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, lighten } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Box from '@material-ui/core/Box';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { warning, clearWarning, reloadMovies, sortBy, loadExactPage, setUnwatchedDatabase, setRatingDatabase, setWatchedDatabase, setRecent, getMovies, getUser, unsetRecent } from '../redux/actions'\r\nimport axios from 'axios';\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst Row = ({data, index}) => {\r\n  const dispatch = useDispatch()\r\n  const classes = useRowStyles();\r\n  const searching = useSelector(state => state.searching)\r\n  const filtered =useSelector(state => state.filteredMovies)\r\n  const userId = useSelector(state => state.userId)\r\n  const currentPage = useSelector(state=> state.currentPage)\r\n  const perPage = useSelector(state=>state.countPerPage)\r\n  const [rating, setRating] = useState(data.rating)\r\n  const [open, setOpen] = useState(false)\r\n  const [state, setState] = useState({checkedG: true})\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  }\r\n  const removeMovieFunction = (id, title) => {\r\n    axios.delete('http://127.0.0.1:8000/api/movies/' + id).then(response=>{\r\n      dispatch(reloadMovies(currentPage, perPage))\r\n      dispatch(warning('delete', title))\r\n      setTimeout(() => {\r\n        dispatch(clearWarning())\r\n      }, 2000)\r\n      }\r\n    )\r\n  }\r\n  const onWatchedHandler = (id, title) => {\r\n    if (!data.watched){\r\n      data.watched = true\r\n      dispatch(setWatchedDatabase(id, title))\r\n      setRating(null)\r\n      dispatch(setRecent(id))\r\n      dispatch(warning('watchedSuccess', title))\r\n      setTimeout(() => {\r\n        dispatch(clearWarning())\r\n      }, 2000)\r\n    }\r\n    else {\r\n      data.watched = false\r\n      setRating(null)\r\n      dispatch(setUnwatchedDatabase(id, title))\r\n    }\r\n  }\r\n\r\n  const onRatingChange = (id, rating, title) => {\r\n    if (data.watched){\r\n      setRating(rating)\r\n      dispatch(setRatingDatabase(id, rating, title))\r\n      dispatch(warning('ratingChange', title))\r\n      setTimeout(() => {\r\n        dispatch(clearWarning())\r\n      }, 2000)\r\n    }\r\n    else {\r\n      dispatch(warning('warning', title))\r\n      setTimeout(() => {\r\n        dispatch(clearWarning(warning))\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          <div style={{ fontSize: '20px' }}>\r\n            {data.title}\r\n          </div>\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n          <div style={{ fontSize: '18px' }}>\r\n            {data.year}</div>\r\n        </TableCell>\r\n        <TableCell align=\"right\" >\r\n          <div style={{ fontSize: '20px' }}>\r\n            {data.imdbRating}</div>\r\n        </TableCell>\r\n       {localStorage.isAuth ? <TableCell align=\"right\">\r\n          <FormControlLabel\r\n            control={<GreenCheckbox checked={data.watched} onClick={() => onWatchedHandler(data.id, data.title)} onChange={handleChange} name=\"checkedG\" />}\r\n            label=\"Watched\"\r\n          />\r\n        </TableCell> : null}\r\n        {localStorage.isAuth ? <TableCell align=\"right\">\r\n          <Rating\r\n            value= {data.watched ? rating : null}\r\n            onChange={(e, rating, title) => onRatingChange(data.id, rating, data.title)}\r\n          />\r\n        </TableCell> : null}\r\n        {localStorage.isAuth ? <TableCell align=\"right\">\r\n          <IconButton aria-label=\"delete\" onClick={() => removeMovieFunction(data.id, data.title)}>\r\n            <DeleteIcon fontSize=\"medium\" />\r\n          </IconButton>\r\n        </TableCell>  : null}\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <div style={{\r\n                textAlign: 'left',\r\n                fontSize: '20px',\r\n                paddingLeft: '5%'\r\n              }}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                  Main Actors:\r\n            </Typography>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {data.actors.map((actor) =>\r\n                        <li>{actor.name}</li>)\r\n                      }\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                  </TableBody>\r\n                </Table>\r\n              </div>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst MaterialTable = () => {\r\n  \r\n  const dispatch = useDispatch()\r\n  const themeStyle = useSelector(state => state.themeStyle)\r\n  const searching = useSelector(state => state.searching)\r\n  const currentPage = useSelector(state => state.currentPage)\r\n  const [order, setOrder] = useState(true)\r\n  const filtered =useSelector(state => state.filteredMovies)\r\n  //const updateState = useSelector(state => (state)) //needed for rendering the table after input\r\n  useEffect(()=>{\r\n    dispatch(loadExactPage(currentPage))\r\n  }, [])\r\n  const useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === 'light'\r\n        ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n        : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n    title: {\r\n      flex: '1 1 100%',\r\n    },\r\n  }));\r\n  const classes = useToolbarStyles();\r\n\r\n  const sortByInput = (item) => {\r\n    dispatch(sortBy(item, order))\r\n    setOrder(!order)\r\n  }\r\n\r\n  Row.propTypes = {\r\n    row: PropTypes.shape({\r\n      yourRating: PropTypes.number,\r\n      history: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          amount: PropTypes.number.isRequired,\r\n          customerId: PropTypes.string.isRequired,\r\n          date: PropTypes.string.isRequired,\r\n        }),\r\n      ).isRequired,\r\n      originalTitle: PropTypes.string.isRequired,\r\n      imdbRating: PropTypes.number.isRequired,\r\n      year: PropTypes.number.isRequired,\r\n      watched: PropTypes.bool.isRequired\r\n    }).isRequired,\r\n  };\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper}>\r\n        <Table size='small' aria-label=\"collapsible table\">\r\n          <TableHead style={themeStyle}>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell>\r\n                <Typography style={{ color: '#FFFFFF' }} className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\"\r\n                  onClick={() => sortByInput('title')}>Movie Title\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell style={{ color: '#FFFFFF' }} onClick={() => sortByInput('year')} align=\"right\">Year</TableCell>\r\n              <TableCell style={{ color: '#FFFFFF' }} onClick={() => sortByInput('imdbRating')} align=\"right\">IMDB Rating&nbsp;</TableCell>\r\n              {localStorage.isAuth ? <TableCell style={{ color: '#FFFFFF' }} onClick={() => sortByInput('watched')} align=\"right\">Watched&nbsp;</TableCell> : null}\r\n              {localStorage.isAuth ? <TableCell style={{ color: '#FFFFFF' }} onClick={() => sortByInput('rating')} align=\"right\">Your Rating&nbsp;</TableCell> : null}\r\n              {localStorage.isAuth ? <TableCell style={{ color: '#FFFFFF' }} align=\"right\">Remove&nbsp;</TableCell> : null}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filtered && filtered.length > 0 && filtered.map((st, index) => {\r\n              return st.title && <Row key={index} data={st} index={index} /> \r\n            }\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MaterialTable;","C:\\React\\react-movies-database-main\\src\\UserProfile\\UserPage.js",["154","155","156","157","158"],"import React, { useState, useEffect } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { warning, clearWarning, setUser, getUser } from '../redux/actions'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport 'date-fns';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport Warning from '../Spinner/Warning';\r\nimport Avatars from '../Spinner/Avatars';\r\n\r\n\r\nconst UserPage = () => {\r\n  const dispatch = useDispatch()\r\n  const themeStyle = useSelector(state => state.themeStyle)\r\n  const themeColor = useSelector(state => state.themeColor)\r\n  const darkMode = useSelector(state => state.darkMode)\r\n\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    dispatch(getUser())\r\n  }, [])\r\n\r\n  const [dark, setDark] = useState(darkMode);\r\n\r\n  const GreenCheckbox = withStyles({\r\n    root: {\r\n      color: green[400],\r\n      '&$checked': {\r\n        color: green[600],\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n  const [newEmail, setNewEmail] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n  const setNewEmailHandler = (event) => {\r\n    setNewEmail(event.target.value)\r\n  }\r\n\r\n  const setNewPasswordHandler = (event) => {\r\n    setNewPassword(event.target.value)\r\n  }\r\n  const updateEmail = () => {\r\n    axios({\r\n      method: 'put',\r\n      url: 'http://127.0.0.1:8000/api/users/' + localStorage.userId,\r\n      data: qs.stringify({\r\n          email: newEmail,\r\n      }),\r\n      headers: {\r\n        'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n      }\r\n    })\r\n  .then(response=>{\r\n    dispatch(warning('emailChanged'))\r\n    setTimeout(() => {\r\n      dispatch(clearWarning())\r\n    }, 2000)\r\n    console.log(response)})\r\n  .catch(error=>console.log(error))\r\n  }\r\n  const updatePassword = () => {\r\n    axios({\r\n      method: 'put',\r\n      url: 'http://127.0.0.1:8000/api/users/' + localStorage.userId,\r\n      data: qs.stringify({\r\n          password: newPassword,\r\n      }),\r\n      headers: {\r\n        'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n      }\r\n    })\r\n  .then(response=>{\r\n    dispatch(warning('passwordChanged'))\r\n    setTimeout(() => {\r\n      dispatch(clearWarning())\r\n    }, 2000)\r\n      console.log(response)})\r\n  .catch(error=>console.log(error))\r\n  }\r\n\r\n  const redTheme = () => {\r\n    dispatch(setUser({ background: '#dc004e', color: 'red' , dark_mode: darkMode}))\r\n    localStorage.setItem('themeStyle', '#dc004e' )\r\n  };\r\n\r\n  const blueTheme = () => {\r\n    dispatch(setUser({ background: '#2E3B55', color: 'blue', dark_mode: darkMode }))\r\n    localStorage.setItem('themeStyle', '#2E3B55' )\r\n  };\r\n\r\n  const greenTheme = () => {\r\n    dispatch(setUser({ background: '#4caf50', color: 'green', dark_mode: darkMode}))\r\n    localStorage.setItem('themeStyle', '#4caf50')\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.checked)\r\n    setDark(event.target.checked)\r\n    const background = themeStyle.background\r\n    dispatch(setUser({background, color: themeColor, dark_mode: event.target.checked }))\r\n  }\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n   <div style={{paddingBottom: \"80px\"}}> <div className={classes.root} >\r\n      <AppBar position=\"static\" style={themeStyle}>\r\n        <Toolbar variant=\"dense\">\r\n          <Box>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={()=>{history.push('./')}}>\r\n              Home\r\n          </IconButton></Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n    <div style={{\r\n      marginLeft: '7%',\r\n      marginTop: '2%'\r\n    }}>\r\n      <Warning />\r\n    </div>\r\n      <div style={{\r\n        textAlign: 'center',\r\n        margin: 'auto',\r\n        width: '60%',\r\n        marginTop: '50px',\r\n        border: '2px solid grey',\r\n        padding: '10px',\r\n      }}>\r\n        <Box pt={3} width={1}>\r\n          <Typography>Update Email/Password</Typography>\r\n        </Box>\r\n        <Box boxShadow={15} pt={2} pb={3} >\r\n          <Typography>\r\n            <TextField onChange={(event) => setNewEmailHandler(event)} id=\"standard-basic\" label=\"User Name\" />\r\n            <Box mt={1} pt={1} justifyContent=\"center\">\r\n              <Button size=\"small\" variant=\"contained\" onClick={updateEmail}>Update</Button></Box></Typography>\r\n          <Typography>\r\n            <TextField onChange={(event) => setNewPasswordHandler(event)} id=\"standard-basic\" label=\"Password\" />\r\n            <Box justifyContent=\"center\" mt={1} pt={1} >\r\n              <Button size=\"small\" variant=\"contained\" onClick={updatePassword}>Update</Button></Box></Typography></Box>\r\n        <Box justifyContent=\"center\" mt={5} mb={2}>\r\n          <Box justifyContent=\"center\" >\r\n            <Typography >Appearance</Typography></Box>\r\n          <Box justifyContent=\"center\" boxShadow={15} >\r\n            <a>Activate Dark Mode :</a><Switch\r\n              checked={darkMode}\r\n              onChange={handleChange}\r\n              color=\"dark\"\r\n              name=\"darkMode\"\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n            <Divider />\r\n            <Box mt={3} mb={3}>\r\n              <Box>\r\n                <a>Select Theme: </a></Box>\r\n              <FormControlLabel\r\n                control={<Checkbox checked={themeColor===\"red\"} onChange={redTheme} name=\"checkedR\" />}\r\n                label=\"Red\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={themeColor===\"blue\"}\r\n                    onChange={blueTheme}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Blue\"\r\n              />\r\n              <FormControlLabel\r\n                control={<GreenCheckbox checked={themeColor===\"green\"} onChange={greenTheme} name=\"checkedG\" />}\r\n                label=\"Green\"\r\n              />\r\n            </Box>\r\n            <Divider />\r\n            <Box pt={3}>\r\n              <a>Select your Avatar:</a>\r\n            </Box>\r\n            <div style={{\r\n              textAlign: 'center',\r\n              margin: 'auto',\r\n              width: '80%',\r\n              paddingBottom: \"10px\"\r\n            }}>\r\n              <Box boxShadow={3} mt={1} mb={5} pt={5} pb={5}>\r\n                <Box>\r\n                <div style={{\r\n                  marginLeft: '10%'\r\n                }}>\r\n                  <Avatars/>\r\n                </div>\r\n                </Box>\r\n              </Box></div>\r\n          </Box>\r\n        </Box>\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default UserPage;","C:\\React\\react-movies-database-main\\src\\Home\\Home.js",["159"],"import React, { useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Home.css';\r\nimport FullTable from '../Table/FullTable';\r\nimport { useDispatch } from 'react-redux'\r\nimport { getMovies, getUser } from '../redux/actions'\r\nimport Warning from '../Spinner/Warning';\r\nimport ClippedDrawer from '../Navigation/Drawer';\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getUser())\r\n        dispatch(getMovies())\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div style={{ padding: \"3%\" }}>\r\n                <ClippedDrawer />\r\n                <div style={{\r\n                    marginTop: '3%',\r\n                    marginBottom: '10%',\r\n                    marginLeft: '13%',\r\n                    position: ' absolute',\r\n                    zIndex: '10',\r\n                }}>\r\n                    <Warning />\r\n                </div>\r\n                <div style={{\r\n                    marginTop: '8%',\r\n                    marginLeft: '15%',\r\n                    paddingLeft: '4%'\r\n                    }}>\r\n                <FullTable />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Home","C:\\React\\react-movies-database-main\\src\\Navigation\\Navbar.js",["160","161","162","163","164","165","166","167","168"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterByValue, loadExactPage, getUser, getMovies} from '../redux/actions'\r\nimport axios from 'axios'\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch()\r\n  const [input, setInput] = useState(\"\")\r\n  const currentPage = useSelector(state => state.currentPage)\r\n  const themeStyle = useSelector(state => state.themeStyle)\r\n  const firstName = useSelector(state => state.firstName)\r\n  const [filteredReturn, setFilteredReturn] = useState('');\r\n  let history = useHistory()\r\n  useEffect(() => {\r\n    dispatch(getUser())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      filterByInput(input)\r\n    }, 200);\r\n    return () => clearTimeout(timer);\r\n  }, [input]);\r\n\r\n  const filterByInput = (input) => {\r\n    if (!input) {\r\n      dispatch(getMovies())\r\n    }\r\n  else axios.post('http://127.0.0.1:8000/api/movies/filtered', {filter: input, userId: localStorage.userId}).then(response=>{\r\n   dispatch(filterByValue({ value: input, filtered: response.data }))\r\n  })\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      padding: '10px',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '12ch',\r\n        '&:focus': {\r\n          width: '20ch',\r\n        },\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const goToNewMovies = () => {\r\n    history.push('/add-movie')\r\n  }\r\n\r\n  const goToHomeTable = () => {\r\n    history.push('/')\r\n  }\r\n\r\n  const onLoginHandler = () => {\r\n    history.push('/auth')\r\n  }\r\n\r\n  const onMyAccountHandler = () => {\r\n    history.push('/user-page')\r\n  }\r\n\r\n  const onLogoutHandler = () => {\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('isAuth')\r\n    localStorage.removeItem('firstName')\r\n    history.push('/auth')\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClose={handleMenuClose}\r\n        onClick={onMyAccountHandler}>My Account</MenuItem>\r\n      <MenuItem onClose={handleMenuClose}\r\n        onClick={onLogoutHandler}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n\r\n  return (\r\n    <div className={classes.grow} style={{marginBottom: '50px'}}>\r\n      <AppBar style={themeStyle} position=\"fixed\" >\r\n        <Toolbar>\r\n          <Button color=\"inherit\" edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={goToHomeTable}\r\n          >\r\n            Home\r\n              </Button>\r\n          {localStorage.isAuth ? <Button color=\"inherit\" edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={goToNewMovies}\r\n          >\r\n            Add Movies\r\n              </Button> : null}\r\n          <div className={classes.grow} />\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n               <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={(e) => setInput(e.target.value.toLowerCase())}\r\n            />\r\n          </div>\r\n          <div className={classes.sectionDesktop}>\r\n            {localStorage.isAuth ? <div>\r\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                <div onClick={() => { history.push('/user-page') }}>\r\n                  <AccountCircle size='large' />\r\n                  <Button color=\"inherit\">Profile</Button>\r\n                </div>\r\n              </IconButton>\r\n              <IconButton color=\"inherit\">\r\n                <Badge badgeContent={0} color=\"secondary\">\r\n                  <Button color=\"inherit\" onClick={onLogoutHandler}>Logout</Button>\r\n                </Badge>\r\n              </IconButton>\r\n            </div> :\r\n              <IconButton color=\"inherit\">\r\n                <Badge badgeContent={0} color=\"secondary\">\r\n                  <Button color=\"inherit\" onClick={onLoginHandler}>Login</Button>\r\n                </Badge>\r\n              </IconButton>\r\n            }\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              {!localStorage.isAuth ? <Button color=\"inherit\" onClick={onLoginHandler}>Login</Button> : <Button color=\"inherit\">Logout <EmojiPeopleIcon size='large' /></Button>}\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Navbar;","C:\\React\\react-movies-database-main\\src\\Table\\FullTable.js",[],"C:\\React\\react-movies-database-main\\src\\Table\\MT.js",["169","170","171","172","173"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setWatched, setDatabase, sortBy, loadExactPage, yourRating, removeMovie } from '../redux/actions'\r\n\r\nconst MT = () => {\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst dispatch = useDispatch()\r\n  const filtered = useSelector(state => (state.filteredMovies))\r\n  const themeStyle = useSelector(state => state.themeStyle)\r\n  const classesRow = useRowStyles();\r\n  const [rating, setRating] = useState(null)\r\n  const [open, setOpen] = useState(false)\r\n  const [state, setState] = useState({checkedG: true})\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  }\r\n\r\n  const removeMovieFunction = (index, ranked) => {\r\n    dispatch(removeMovie(index, ranked))\r\n    dispatch(setDatabase())\r\n  }\r\n\r\n  const onClickHandler = (index, ranked) => {\r\n    dispatch(setWatched(index, ranked))\r\n    dispatch(setDatabase())\r\n  }\r\n\r\n  const onRatingChange = (rating, index, ranked) => {\r\n    setRating(rating)\r\n    dispatch(yourRating(rating, index, ranked ))\r\n    dispatch(setDatabase())\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead style={themeStyle}>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Movie Title</TableCell>\r\n            <TableCell align=\"right\">Year</TableCell>\r\n            <TableCell align=\"right\">IMDB Rating&nbsp;</TableCell>\r\n            <TableCell align=\"right\">Watched&nbsp;</TableCell>\r\n            <TableCell align=\"right\">Your Rating&nbsp;</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {filtered && filtered.length > 0 && filtered.map((movie) => (\r\n            <React.Fragment>\r\n            <TableRow className={classesRow.root} key={movie.year}>\r\n            <TableCell>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n            </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {movie.originalTitle}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{movie.year}</TableCell>\r\n              <TableCell align=\"right\">{movie.imdbRating}</TableCell>\r\n              <TableCell align=\"right\">\r\n          <FormControlLabel\r\n            control={<GreenCheckbox checked={movie.watched} onClick={() => onClickHandler(movie.ranked)} onChange={handleChange} name=\"checkedG\" />}\r\n            label=\"Watched\"\r\n          />\r\n        </TableCell>\r\n              <TableCell align=\"right\">{movie.yourRating}</TableCell>\r\n           </TableRow>\r\n              <TableRow>\r\n             <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n               <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                 <Box margin={1}>\r\n                   <div style={{\r\n                     textAlign: 'left',\r\n                     fontSize: '20px',\r\n                     paddingLeft: '5%'\r\n                   }}>\r\n                     <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                       Actors:\r\n                 </Typography>\r\n                     <Table size=\"small\" aria-label=\"purchases\">\r\n                       <TableHead>\r\n                         <TableRow>\r\n                           {movie.actors.map(actor =>\r\n                            <li>{actor}</li>\r\n                           )}\r\n                         </TableRow>\r\n                          </TableHead>\r\n                       <TableBody>\r\n                       </TableBody>\r\n                     </Table>\r\n                   </div>\r\n                 </Box>\r\n               </Collapse>\r\n               </TableCell>\r\n               </TableRow>\r\n               </React.Fragment>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default MT",["174","175"],"C:\\React\\react-movies-database-main\\src\\SignIn\\SignInBackend.js",["176","177","178","179"],"import React, { useState } from 'react';\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport './SignInCard.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch} from 'react-redux'\r\nimport axios from 'axios';\r\n\r\nconst SignInCard = () => {\r\n    const dispatch = useDispatch()\r\n    let [switchSignIn, setSwitchSignIn] = useState(true)\r\n    const [registerData, setRegisterData]= useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        email: ''\r\n        })\r\n    const [signInData, setSignInData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    let [errors, setErrors] = useState({\r\n    email: '',\r\n    password: ''\r\n    })\r\n  let history = useHistory()\r\n\r\n  const firstNameInputHandler = (event) => {\r\n    setRegisterData({\r\n        ...registerData,\r\n        first_name: event.target.value})\r\n  }\r\n  const lastNameInputHandler = (event) => {\r\n    setRegisterData({\r\n        ...registerData,\r\n        last_name: event.target.value})\r\n  }\r\n  const emailInputHandler = (event) => {\r\n    setRegisterData({\r\n        ...registerData,\r\n        email: event.target.value})\r\n    setSignInData({\r\n        ...signInData,\r\n        email: event.target.value})\r\n  }\r\n\r\n  const passwordInputHandler = (event) =>{\r\n    setSignInData({\r\n        ...signInData,\r\n        password: event.target.value})\r\n  }\r\n\r\n  const SwitchSignInHandler = () => {\r\n    setSwitchSignIn(!switchSignIn)\r\n  }\r\n\r\n  const onSignUpHandler = (event) => {\r\n    event.preventDefault()\r\n    axios.post('http://127.0.0.1:8000/api/users', registerData)\r\n    .then(response=>{\r\n        localStorage.setItem('userId', response.data.id)\r\n        console.log(response)})\r\n    .catch(error =>console.log(error));\r\n    history.push('/password')\r\n  }\r\n\r\n  const onSignInHandler = (event) => {\r\n    event.preventDefault()\r\n    axios.post('http://127.0.0.1:8000/api/login', signInData)\r\n    .then(response=>{\r\n        localStorage.setItem('token', response.data.token)\r\n        localStorage.setItem('isAuth', true)\r\n        localStorage.setItem('userId', parseInt(response.data.id))\r\n        console.log(response)\r\n        history.push('/table')\r\n    })\r\n    .catch(error =>console.log(error));\r\n  }\r\n\r\n  let button = !switchSignIn ? (<Button\r\n    variant=\"contained\"\r\n    color=\"primary\"\r\n    type=\"submit\"\r\n    onClick={onSignUpHandler}\r\n  >\r\n    Sign Up !\r\n  </Button>) :\r\n    (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        onClick={onSignInHandler}\r\n      >\r\n        Sign In !\r\n      </Button>)\r\n\r\n  let signMessage = switchSignIn ? (\r\n    <a>Please Sign In</a>\r\n  ) :\r\n    <a>Please Sign Up</a>\r\n\r\n  let switchButton = (\r\n    <div style={{padding: '10px'}}>\r\n    <Button\r\n    type=\"submit\"\r\n    color=\"#b71c1c\"\r\n    variant=\"contained\"\r\n    onClick={SwitchSignInHandler}>Swtich to {!switchSignIn ? 'Sign In' : \"Sign Up\"}</Button></div>\r\n  )\r\n\r\n  let signCard = (\r\n    <div> \r\n      <div>\r\n        <div>\r\n          {signMessage}\r\n          {!switchSignIn ?\r\n            <div style={{padding:'10px'}}>\r\n              <TextField id=\"outlined-basic\" label=\"First Name\" variant=\"outlined\" onChange={firstNameInputHandler}/>\r\n              <div className=\"text-danger\" style={{padding: '5px'}}>{errors.firstName}</div>\r\n              <TextField id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" onChange={lastNameInputHandler}/>\r\n              <div className=\"text-danger\" style={{padding: '5px'}}>{errors.lastName}</div>\r\n              <TextField id=\"outlined-basic\" label=\"Enter email\" variant=\"outlined\" onChange={emailInputHandler}/>\r\n              <div className=\"text-danger\" style={{padding: '5px'}}>{errors.email}</div>\r\n            </div>\r\n            : <div>\r\n             <TextField id=\"outlined-basic\" label=\"Enter email\" variant=\"outlined\" onChange={emailInputHandler}/>\r\n              <div className=\"text-danger\" style={{padding: '5px'}}>{errors.email}</div>\r\n              <div style={{padding:'5px'}}>\r\n             <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                variant=\"outlined\"\r\n                onChange={passwordInputHandler}/>\r\n             <div className=\"text-danger\">{errors.password}</div>\r\n              </div>\r\n             </div>\r\n            }\r\n        </div>\r\n        <div controlId=\"formBasicCheckbox\">\r\n          {switchSignIn ? <div type=\"checkbox\" label=\"Remember Me\" /> : null}\r\n        </div>\r\n        <div>{button}</div>\r\n        <div>{switchButton}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n  console.warn = console.error = () => { };\r\n  return (\r\n    localStorage.isAuth ? <Redirect to={'/table'} /> : signCard\r\n  )\r\n}\r\n\r\nexport default SignInCard;","C:\\React\\react-movies-database-main\\src\\SignIn\\UpdatePassword.js",[],"C:\\React\\react-movies-database-main\\src\\Home\\Carousel.js",["180","181","182","183","184"],"import { Splide, SplideSlide } from '@splidejs/react-splide';\r\n\r\n// import '@splidejs/splide/dist/css/themes/splide-default.min.css';\r\n// import '@splidejs/splide/dist/css/themes/splide-sea-green.min.css';\r\nimport '@splidejs/splide/dist/css/themes/splide-skyblue.min.css';\r\n\r\nconst Carousel=()=>{\r\nreturn (\r\n    <Splide options={ {\r\n        margin:{\r\n          left: '1rem'\r\n        },\r\n        arrows: false,\r\n        pagination: false,\r\n        type   : 'loop',\r\n        autoplay: true,\r\n        focus: 'center',\r\n        interval: 5000,\r\n        pauseOnHover: true,\r\n        slideFocus: true,\r\n        perPage: 1,\r\n        rewind : true,\r\n        width  : 150,\r\n        height: 130,\r\n        gap    : '1rem',\r\n      } }>\r\n  <SplideSlide>\r\n    <img src=\"https://pbs.twimg.com/profile_images/695587106928906240/p_uKNflX_400x400.jpg\" alt=\"Image 1\"/>\r\n  </SplideSlide>\r\n  <SplideSlide>\r\n    <img src=\"https://pbs.twimg.com/profile_images/378800000249725777/6227821c6411f865e286d040df29848b.jpeg\" alt=\"Image 2\"/>\r\n  </SplideSlide>\r\n  <SplideSlide>\r\n    <img src=\"https://d26oc3sg82pgk3.cloudfront.net/files/media/edit/image/4009/square_thumb%402x.jpg\"/>\r\n  </SplideSlide>\r\n  <SplideSlide>\r\n    <img src=\"https://pbs.twimg.com/profile_images/642791158351925248/qkc3BHQ6.jpg\"/>\r\n  </SplideSlide>\r\n  <SplideSlide>\r\n    <img src=\"https://pbs.twimg.com/profile_images/2942458178/4d47e763fe635a31497845ce6a885d00.jpeg\"/>\r\n  </SplideSlide>\r\n</Splide>\r\n)\r\n}\r\nexport default Carousel;\r\n","C:\\React\\react-movies-database-main\\src\\Home\\slides.js",[],"C:\\React\\react-movies-database-main\\src\\Spinner\\Warning.js",[],"C:\\React\\react-movies-database-main\\src\\Spinner\\Avatars.js",[],"C:\\React\\react-movies-database-main\\src\\Navigation\\Drawer.js",["185","186","187","188","189","190","191","192","193","194"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Navbar from './Navbar';\r\nimport Avatars from '../Spinner/Avatars';\r\nimport ThemeSelector from '../Spinner/ThemeSelector';\r\nimport { useSelector } from 'react-redux';\r\nimport Box from '@material-ui/core/Box';\r\nimport Carousel from '../Home/Carousel'\r\nimport { getMovies, getUser } from '../redux/actions'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nfunction ClippedDrawer() {\r\n  \r\nconst firstName = useSelector(state=>state.firstName)\r\nconst lastName = useSelector(state=>state.lastName)\r\nconst themeColor = useSelector(state => state.themeColor)\r\nconst recent = useSelector(state=>state.recent)\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    boxShadow: '1px npm #888888',\r\n    border: themeColor==='red' ? '1px solid red ' : themeColor==='blue' ? '1px solid darkblue ' :  '1px solid green '\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n         <Navbar />\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List className={classes.root}>\r\n            {/* {['Welcome', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))} */}\r\n             <ListItem>\r\n                <ListItemText>{firstName +' '+ lastName}</ListItemText>\r\n             </ListItem>\r\n             <ListItem >\r\n                <Avatars />\r\n             </ListItem>\r\n             <Divider />\r\n          </List>\r\n          <ThemeSelector/>\r\n          <ListItemText style={{marginTop: '25px' ,marginLeft: '10px'}}>Recently Watched Movies:</ListItemText>\r\n          <Divider />\r\n          \r\n           {recent.map(r=>(\r\n          <ListItemText style={{marginLeft: '10px'}}>✔️ {r.title +' (' + r.year + ')'}</ListItemText>\r\n          ))}\r\n          <ListItemText style={{marginTop: '30px', marginLeft: '10px'}}>You should watch:</ListItemText>\r\n          <Divider />\r\n          <ListItemText style={{marginLeft: '10px'}}><li>Leonardo DiCaprio</li></ListItemText>\r\n          <ListItemText style={{marginLeft: '10px'}}><li>Robert De Niro</li></ListItemText>\r\n          <ListItemText style={{marginLeft: '10px'}}><li>Morgan Freeman</li></ListItemText>\r\n          <ListItemText style={{marginLeft: '10px'}}><li>Al Pacino</li></ListItemText>\r\n          <ListItemText style={{marginLeft: '10px'}}><li>Brad Pitt</li></ListItemText>\r\n        </div>\r\n          {/* <Box mt = {1} ml={2} mr={5} boxShadow={5}>\r\n            <ListItem>\r\n              <Carousel />\r\n            </ListItem>\r\n          </Box> */}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClippedDrawer","C:\\React\\react-movies-database-main\\src\\Spinner\\ThemeSelector.js",["195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { warning, clearWarning, setUser, userBirthday, getUser } from '../redux/actions'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport firebase from 'firebase';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport 'date-fns';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport Warning from '../Spinner/Warning';\r\nimport Avatars from '../Spinner/Avatars';\r\n\r\nconst ThemeSelector = () => {\r\n\r\nconst dispatch = useDispatch()\r\nconst themeStyle = useSelector(state => state.themeStyle)\r\nconst themeColor = useSelector(state => state.themeColor)\r\nconst darkMode = useSelector(state => state.darkMode)\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: green[400],\r\n      '&$checked': {\r\n        color: green[600],\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst redTheme = () => {\r\n    dispatch(setUser({ background: '#dc004e', color: 'red' , dark_mode: darkMode}))\r\n  };\r\n\r\n  const blueTheme = () => {\r\n    dispatch(setUser({ background: '#2E3B55', color: 'blue', dark_mode: darkMode }))\r\n  };\r\n\r\n  const greenTheme = () => {\r\n    dispatch(setUser({ background: '#4caf50', color: 'green', dark_mode: darkMode}))\r\n  };\r\n\r\n\r\n  return (\r\n  <div style={{display: 'flex', justifyContent: 'center', marginLeft: '5%'}}>\r\n    <FormControlLabel\r\n    control={<Checkbox checked={themeColor===\"red\"} onChange={redTheme} name=\"checkedR\" />}\r\n    label=\"Red\"\r\n  />\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n        checked={themeColor===\"blue\"}\r\n        onChange={blueTheme}\r\n        name=\"checkedB\"\r\n        color=\"primary\"\r\n      />\r\n    }\r\n    label=\"Blue\"\r\n  />\r\n  <FormControlLabel\r\n    control={<GreenCheckbox checked={themeColor===\"green\"} onChange={greenTheme} name=\"checkedG\" />}\r\n    label=\"Green\"\r\n  />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default ThemeSelector;",["218","219"],{"ruleId":"220","severity":1,"message":"221","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":16},{"ruleId":"220","severity":1,"message":"224","line":11,"column":10,"nodeType":"222","messageId":"223","endLine":11,"endColumn":16},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":39,"column":8,"nodeType":"231","endLine":39,"endColumn":10,"suggestions":"232"},{"ruleId":"220","severity":1,"message":"233","line":1,"column":77,"nodeType":"222","messageId":"223","endLine":1,"endColumn":84},{"ruleId":"234","severity":1,"message":"235","line":18,"column":1,"nodeType":"236","endLine":159,"endColumn":2},{"ruleId":"220","severity":1,"message":"237","line":161,"column":10,"nodeType":"222","messageId":"223","endLine":161,"endColumn":17},{"ruleId":"220","severity":1,"message":"238","line":173,"column":10,"nodeType":"222","messageId":"223","endLine":173,"endColumn":18},{"ruleId":"220","severity":1,"message":"239","line":1,"column":89,"nodeType":"222","messageId":"223","endLine":1,"endColumn":102},{"ruleId":"220","severity":1,"message":"240","line":3,"column":10,"nodeType":"222","messageId":"223","endLine":3,"endColumn":23},{"ruleId":"241","severity":1,"message":"242","line":39,"column":27,"nodeType":"243","endLine":39,"endColumn":47},{"ruleId":"220","severity":1,"message":"244","line":3,"column":21,"nodeType":"222","messageId":"223","endLine":3,"endColumn":31},{"ruleId":"220","severity":1,"message":"245","line":8,"column":9,"nodeType":"222","messageId":"223","endLine":8,"endColumn":20},{"ruleId":"220","severity":1,"message":"246","line":4,"column":21,"nodeType":"222","messageId":"223","endLine":4,"endColumn":32},{"ruleId":"220","severity":1,"message":"247","line":12,"column":11,"nodeType":"222","messageId":"223","endLine":12,"endColumn":16},{"ruleId":"229","severity":1,"message":"230","line":19,"column":8,"nodeType":"231","endLine":19,"endColumn":10,"suggestions":"248"},{"ruleId":"220","severity":1,"message":"249","line":10,"column":10,"nodeType":"222","messageId":"223","endLine":10,"endColumn":21},{"ruleId":"220","severity":1,"message":"250","line":14,"column":8,"nodeType":"222","messageId":"223","endLine":14,"endColumn":10},{"ruleId":"220","severity":1,"message":"251","line":17,"column":9,"nodeType":"222","messageId":"223","endLine":17,"endColumn":17},{"ruleId":"220","severity":1,"message":"252","line":24,"column":142,"nodeType":"222","messageId":"223","endLine":24,"endColumn":151},{"ruleId":"220","severity":1,"message":"253","line":24,"column":153,"nodeType":"222","messageId":"223","endLine":24,"endColumn":160},{"ruleId":"220","severity":1,"message":"254","line":24,"column":162,"nodeType":"222","messageId":"223","endLine":24,"endColumn":173},{"ruleId":"220","severity":1,"message":"255","line":48,"column":9,"nodeType":"222","messageId":"223","endLine":48,"endColumn":18},{"ruleId":"220","severity":1,"message":"256","line":49,"column":9,"nodeType":"222","messageId":"223","endLine":49,"endColumn":17},{"ruleId":"220","severity":1,"message":"257","line":50,"column":9,"nodeType":"222","messageId":"223","endLine":50,"endColumn":15},{"ruleId":"220","severity":1,"message":"255","line":180,"column":9,"nodeType":"222","messageId":"223","endLine":180,"endColumn":18},{"ruleId":"229","severity":1,"message":"258","line":187,"column":6,"nodeType":"231","endLine":187,"endColumn":8,"suggestions":"259"},{"ruleId":"229","severity":1,"message":"230","line":35,"column":6,"nodeType":"231","endLine":35,"endColumn":8,"suggestions":"260"},{"ruleId":"220","severity":1,"message":"261","line":37,"column":10,"nodeType":"222","messageId":"223","endLine":37,"endColumn":14},{"ruleId":"262","severity":1,"message":"263","line":173,"column":13,"nodeType":"264","endLine":173,"endColumn":16},{"ruleId":"262","severity":1,"message":"263","line":183,"column":17,"nodeType":"264","endLine":183,"endColumn":20},{"ruleId":"262","severity":1,"message":"263","line":206,"column":15,"nodeType":"264","endLine":206,"endColumn":18},{"ruleId":"229","severity":1,"message":"230","line":16,"column":8,"nodeType":"231","endLine":16,"endColumn":10,"suggestions":"265"},{"ruleId":"220","severity":1,"message":"240","line":17,"column":25,"nodeType":"222","messageId":"223","endLine":17,"endColumn":38},{"ruleId":"220","severity":1,"message":"245","line":23,"column":9,"nodeType":"222","messageId":"223","endLine":23,"endColumn":20},{"ruleId":"220","severity":1,"message":"266","line":25,"column":9,"nodeType":"222","messageId":"223","endLine":25,"endColumn":18},{"ruleId":"220","severity":1,"message":"267","line":26,"column":10,"nodeType":"222","messageId":"223","endLine":26,"endColumn":24},{"ruleId":"220","severity":1,"message":"268","line":26,"column":26,"nodeType":"222","messageId":"223","endLine":26,"endColumn":43},{"ruleId":"229","severity":1,"message":"230","line":30,"column":6,"nodeType":"231","endLine":30,"endColumn":8,"suggestions":"269"},{"ruleId":"229","severity":1,"message":"270","line":37,"column":6,"nodeType":"231","endLine":37,"endColumn":13,"suggestions":"271"},{"ruleId":"272","severity":1,"message":"273","line":213,"column":13,"nodeType":"243","endLine":213,"endColumn":28},{"ruleId":"272","severity":1,"message":"273","line":221,"column":13,"nodeType":"243","endLine":221,"endColumn":28},{"ruleId":"220","severity":1,"message":"274","line":22,"column":35,"nodeType":"222","messageId":"223","endLine":22,"endColumn":41},{"ruleId":"220","severity":1,"message":"240","line":22,"column":43,"nodeType":"222","messageId":"223","endLine":22,"endColumn":56},{"ruleId":"220","severity":1,"message":"275","line":52,"column":10,"nodeType":"222","messageId":"223","endLine":52,"endColumn":16},{"ruleId":"220","severity":1,"message":"276","line":61,"column":9,"nodeType":"222","messageId":"223","endLine":61,"endColumn":28},{"ruleId":"220","severity":1,"message":"277","line":71,"column":9,"nodeType":"222","messageId":"223","endLine":71,"endColumn":23},{"ruleId":"225","replacedBy":"278"},{"ruleId":"227","replacedBy":"279"},{"ruleId":"220","severity":1,"message":"251","line":11,"column":11,"nodeType":"222","messageId":"223","endLine":11,"endColumn":19},{"ruleId":"220","severity":1,"message":"280","line":23,"column":18,"nodeType":"222","messageId":"223","endLine":23,"endColumn":27},{"ruleId":"262","severity":1,"message":"263","line":100,"column":5,"nodeType":"264","endLine":100,"endColumn":8},{"ruleId":"262","severity":1,"message":"263","line":102,"column":5,"nodeType":"264","endLine":102,"endColumn":8},{"ruleId":"281","severity":1,"message":"282","line":28,"column":5,"nodeType":"264","endLine":28,"endColumn":108},{"ruleId":"281","severity":1,"message":"282","line":31,"column":5,"nodeType":"264","endLine":31,"endColumn":125},{"ruleId":"283","severity":1,"message":"284","line":34,"column":5,"nodeType":"264","endLine":34,"endColumn":105},{"ruleId":"283","severity":1,"message":"284","line":37,"column":5,"nodeType":"264","endLine":37,"endColumn":86},{"ruleId":"283","severity":1,"message":"284","line":40,"column":5,"nodeType":"264","endLine":40,"endColumn":103},{"ruleId":"220","severity":1,"message":"285","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"286","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":18},{"ruleId":"220","severity":1,"message":"287","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":20},{"ruleId":"220","severity":1,"message":"288","line":13,"column":8,"nodeType":"222","messageId":"223","endLine":13,"endColumn":17},{"ruleId":"220","severity":1,"message":"289","line":14,"column":8,"nodeType":"222","messageId":"223","endLine":14,"endColumn":16},{"ruleId":"220","severity":1,"message":"290","line":19,"column":8,"nodeType":"222","messageId":"223","endLine":19,"endColumn":11},{"ruleId":"220","severity":1,"message":"291","line":20,"column":8,"nodeType":"222","messageId":"223","endLine":20,"endColumn":16},{"ruleId":"220","severity":1,"message":"252","line":21,"column":10,"nodeType":"222","messageId":"223","endLine":21,"endColumn":19},{"ruleId":"220","severity":1,"message":"253","line":21,"column":21,"nodeType":"222","messageId":"223","endLine":21,"endColumn":28},{"ruleId":"220","severity":1,"message":"292","line":22,"column":10,"nodeType":"222","messageId":"223","endLine":22,"endColumn":21},{"ruleId":"220","severity":1,"message":"293","line":3,"column":17,"nodeType":"222","messageId":"223","endLine":3,"endColumn":25},{"ruleId":"220","severity":1,"message":"285","line":3,"column":27,"nodeType":"222","messageId":"223","endLine":3,"endColumn":36},{"ruleId":"220","severity":1,"message":"290","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":11},{"ruleId":"220","severity":1,"message":"294","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":17},{"ruleId":"220","severity":1,"message":"295","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":15},{"ruleId":"220","severity":1,"message":"296","line":7,"column":10,"nodeType":"222","messageId":"223","endLine":7,"endColumn":20},{"ruleId":"220","severity":1,"message":"297","line":8,"column":10,"nodeType":"222","messageId":"223","endLine":8,"endColumn":17},{"ruleId":"220","severity":1,"message":"298","line":8,"column":19,"nodeType":"222","messageId":"223","endLine":8,"endColumn":31},{"ruleId":"220","severity":1,"message":"299","line":8,"column":42,"nodeType":"222","messageId":"223","endLine":8,"endColumn":54},{"ruleId":"220","severity":1,"message":"253","line":8,"column":56,"nodeType":"222","messageId":"223","endLine":8,"endColumn":63},{"ruleId":"220","severity":1,"message":"300","line":9,"column":10,"nodeType":"222","messageId":"223","endLine":9,"endColumn":20},{"ruleId":"220","severity":1,"message":"301","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":14},{"ruleId":"220","severity":1,"message":"302","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":15},{"ruleId":"220","severity":1,"message":"286","line":12,"column":8,"nodeType":"222","messageId":"223","endLine":12,"endColumn":18},{"ruleId":"220","severity":1,"message":"303","line":13,"column":8,"nodeType":"222","messageId":"223","endLine":13,"endColumn":18},{"ruleId":"220","severity":1,"message":"304","line":14,"column":8,"nodeType":"222","messageId":"223","endLine":14,"endColumn":14},{"ruleId":"220","severity":1,"message":"221","line":15,"column":8,"nodeType":"222","messageId":"223","endLine":15,"endColumn":16},{"ruleId":"220","severity":1,"message":"305","line":21,"column":8,"nodeType":"222","messageId":"223","endLine":21,"endColumn":14},{"ruleId":"220","severity":1,"message":"306","line":23,"column":8,"nodeType":"222","messageId":"223","endLine":23,"endColumn":13},{"ruleId":"220","severity":1,"message":"250","line":24,"column":8,"nodeType":"222","messageId":"223","endLine":24,"endColumn":10},{"ruleId":"220","severity":1,"message":"307","line":25,"column":8,"nodeType":"222","messageId":"223","endLine":25,"endColumn":15},{"ruleId":"220","severity":1,"message":"308","line":26,"column":8,"nodeType":"222","messageId":"223","endLine":26,"endColumn":15},{"ruleId":"220","severity":1,"message":"309","line":31,"column":7,"nodeType":"222","messageId":"223","endLine":31,"endColumn":17},{"ruleId":"225","replacedBy":"310"},{"ruleId":"227","replacedBy":"311"},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'config' is defined but never used.","no-native-reassign",["312"],"no-negated-in-lhs",["313"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["314"],"'SORT_BY' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'sortAsc' is defined but never used.","'sortDesc' is defined but never used.","'RELOAD_MOVIES' is defined but never used.","'loadExactPage' is defined but never used.","jsx-a11y/aria-proptypes","The value for aria-current must be a single token from the following: page,step,location,date,time,true,false.","JSXAttribute","'setPerPage' is defined but never used.","'currentPage' is assigned a value but never used.","'getDarkMode' is defined but never used.","'state' is assigned a value but never used.",["315"],"'addNewMovie' is defined but never used.","'qs' is defined but never used.","'dispatch' is assigned a value but never used.","'getMovies' is defined but never used.","'getUser' is defined but never used.","'unsetRecent' is defined but never used.","'searching' is assigned a value but never used.","'filtered' is assigned a value but never used.","'userId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentPage' and 'dispatch'. Either include them or remove the dependency array.",["316"],["317"],"'dark' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["318"],"'firstName' is assigned a value but never used.","'filteredReturn' is assigned a value but never used.","'setFilteredReturn' is assigned a value but never used.",["319"],"React Hook useEffect has a missing dependency: 'filterByInput'. Either include it or remove the dependency array.",["320"],"react/jsx-no-duplicate-props","No duplicate props allowed","'sortBy' is defined but never used.","'rating' is assigned a value but never used.","'removeMovieFunction' is assigned a value but never used.","'onRatingChange' is assigned a value but never used.",["312"],["313"],"'setErrors' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'Typography' is defined but never used.","'ListItemIcon' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Box' is defined but never used.","'Carousel' is defined but never used.","'useDispatch' is defined but never used.","'useState' is defined but never used.","'TextField' is defined but never used.","'Divider' is defined but never used.","'useHistory' is defined but never used.","'warning' is defined but never used.","'clearWarning' is defined but never used.","'userBirthday' is defined but never used.","'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'axios' is defined but never used.","'Warning' is defined but never used.","'Avatars' is defined but never used.","'themeStyle' is assigned a value but never used.",["312"],["313"],"no-global-assign","no-unsafe-negation",{"desc":"321","fix":"322"},{"desc":"321","fix":"323"},{"desc":"324","fix":"325"},{"desc":"321","fix":"326"},{"desc":"321","fix":"327"},{"desc":"321","fix":"328"},{"desc":"329","fix":"330"},"Update the dependencies array to be: [dispatch]",{"range":"331","text":"332"},{"range":"333","text":"332"},"Update the dependencies array to be: [currentPage, dispatch]",{"range":"334","text":"335"},{"range":"336","text":"332"},{"range":"337","text":"332"},{"range":"338","text":"332"},"Update the dependencies array to be: [filterByInput, input]",{"range":"339","text":"340"},[1366,1368],"[dispatch]",[740,742],[6826,6828],"[currentPage, dispatch]",[1449,1451],[502,504],[1387,1389],[1539,1546],"[filterByInput, input]"]