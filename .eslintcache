[{"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\index.js":"1","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\App.js":"2","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\TableHeader.js":"3","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\SearchBar.js":"4","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\TableData.js":"5","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\PerPageSelector.js":"6","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Pagination.js":"7","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Spinner\\Spinner.js":"8","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\FilterSelectorTest.js":"9","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Table.js":"10","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Auth.js":"11","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Navigation.js":"12","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\NavigationBar.js":"13","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\SignInCard.js":"14","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\UserTable\\FirebaseTests\\FirebaseTest.js":"15","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\reducer.js":"16","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\utility.js":"17","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\types.js":"18","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\actions.js":"19"},{"size":1097,"mtime":1611348838661,"results":"20","hashOfConfig":"21"},{"size":2550,"mtime":1611680341463,"results":"22","hashOfConfig":"21"},{"size":1638,"mtime":1611687005232,"results":"23","hashOfConfig":"21"},{"size":953,"mtime":1610196725062,"results":"24","hashOfConfig":"21"},{"size":4105,"mtime":1611689887743,"results":"25","hashOfConfig":"21"},{"size":1445,"mtime":1611685204433,"results":"26","hashOfConfig":"21"},{"size":2485,"mtime":1611683569067,"results":"27","hashOfConfig":"21"},{"size":159,"mtime":1610998435474,"results":"28","hashOfConfig":"21"},{"size":1331,"mtime":1611407904542,"results":"29","hashOfConfig":"21"},{"size":4513,"mtime":1611684497413,"results":"30","hashOfConfig":"21"},{"size":964,"mtime":1611613285396,"results":"31","hashOfConfig":"21"},{"size":3303,"mtime":1611688057974,"results":"32","hashOfConfig":"21"},{"size":3174,"mtime":1610572151871,"results":"33","hashOfConfig":"21"},{"size":6935,"mtime":1611687918574,"results":"34","hashOfConfig":"21"},{"size":1942,"mtime":1610992826017,"results":"35","hashOfConfig":"21"},{"size":11637,"mtime":1611690189407,"results":"36","hashOfConfig":"21"},{"size":140,"mtime":1611430183703,"results":"37","hashOfConfig":"21"},{"size":527,"mtime":1611684849926,"results":"38","hashOfConfig":"21"},{"size":2775,"mtime":1611687929238,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"jvzcag",{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\index.js",[],["93","94"],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\App.js",["95","96","97","98"],"import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Spinner from './Spinner/Spinner'\nimport Table from './Table';\nimport Navigation from './Navigation'\nimport {getMovies} from './redux/actions'\nimport './App.css';\n\n\nconst App = (props) => {\n\n  const [movies, setMovies] = useState(props.mov)   \n  const [loading, setLoading] = useState(props.loading)\n  let [isLoggedIn, setIsLoggedIn] = useState(false)\n\n  useEffect(() => {\n    props.getMovies()\n  },[])\n  \n\n    // useEffect(() => {\n    //   if (typeof props.filtered !== \"undefined\"){\n    //   setMovies(props.filtered)}\n    // }, [props.filtered])\n    // useEffect(() => {\n    //   if (typeof props.filtered === \"undefined\"){\n    //   setMovies(props.mov)}\n    // }, [props.mov])\n  // useEffect(() => {\n  //   setMovies(props.mov)\n  // }, [props.mov])\n  // useEffect(() => {\n  //   setMovies(props.filtered)\n  // }, [props.filtered])\n//   const load = _ => {\n//     if(localStorage.isAuth){\n//       axios.get('https://react-movies-database-default-rtdb.firebaseio.com/' + localStorage.userId + '.json').then(response => {\n//       console.log(response.data)\n//       localStorage.setItem('firstName', response.data[122])\n//       let movies=[...response.data]\n//       setMovies(movies.slice(0,122))\n//       setLoading(false)\n//     })\n//     .catch(error => console.log(error))\n// }\n\n// else {\n//       axios.get('https://react-movies-database-default-rtdb.firebaseio.com/Table.json').then(response => {\n//       console.log(response.data)\n//       setMovies(response.data)\n//       setLoading(false)\n//     })\n//     .catch(error => console.log(error))\n// }\n//     }\nif (props.loading) {\n   return <Spinner/>\n }\nconsole.warn = console.error = () => {};\n      return (\n      <div style={{ \n       // backgroundSize: 'cover',\n        //backgroundImage: `url(\"https://i.pinimg.com/originals/29/b4/f3/29b4f3a261a2b212f7a831f31940f1ad.jpg\")` \n      }}>\n          <Navigation \n            movies={movies}\n            setMovies={setMovies}\n            isLoggedIn={isLoggedIn}\n            setIsLoggedIn={setIsLoggedIn}\n          />\n          <Table \n            movies={movies}\n            setMovies={setMovies}/>\n      </div>\n      )}\n\n      const mapStateToProps  = (state) => (\n        {mov: state.movies,\n        loading: state.loading,\n        filtered: state.filteredMovies,\n        searching: state.searching\n        })\n\nexport default connect(mapStateToProps, {getMovies})(App);","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\TableHeader.js",["99"],"import React, {useState} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {connect} from 'react-redux'\r\n\r\nconst TableHeader = (props) => {\r\n   let [isAuth, setIsAuth] = useState(localStorage.isAuth)\r\n   const [order, setOrder] = useState(true)\r\n   let header =  [\r\n      {originalName: \"ranked\", name: \"Ranked\"},\r\n      {originalName: \"imdbRating\", name:\"IMDB Rating\"},\r\n      {originalName: \"originalTitle\", name:\"Title\"},\r\n      {originalName: \"year\", name: \"Year\"}];\r\n     \r\n     const sortByInput = (item) =>{\r\n         props.sortBy(item, order)\r\n         setOrder(!order)\r\n      }\r\n\r\n   if(isAuth) {\r\n      header =  [\r\n         {originalName: \"ranked\", name: \"Ranked\"},\r\n         {originalName: \"imdbRating\", name:\"IMDB Rating\"},\r\n         {originalName: \"originalTitle\", name:\"Title\"},\r\n         {originalName: \"year\", name: \"Year\"},\r\n         {originalName: \"watched\", name: \"Watched\"}]\r\n      }\r\n\r\n   return header.map((item, index) => {\r\n      return <th class=\"align-middle\" key={index}>\r\n         <span onClick={() => sortByInput(item.originalName)}>{item.name}</span>\r\n         {/* {item.originalName === 'Watched' ? <FilterSelectorTest\r\n                                 movies={props.movies}\r\n                                 setMovies={props.setMovies}\r\n         /> : null} */}\r\n         </th>\r\n   })\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n   return {\r\n      sortBy: (item, order) =>{\r\n      console.log(item, order)\r\n      dispatch({\r\n         type: 'SORT_BY',\r\n         payload: item,\r\n         order: order\r\n      })}\r\n   } \r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TableHeader)","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\SearchBar.js",[],["100","101"],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\TableData.js",["102","103","104","105","106","107","108","109","110"],"import React, { useEffect, useState } from 'react';\r\nimport firebase from 'firebase';\r\nimport {connect} from 'react-redux'\r\nimport Spinner from './Spinner/Spinner';\r\n\r\nfunction TableData(props) {\r\n    let [isAuth, setIsAuth] = useState(localStorage.isAuth)\r\n    const [moviesData, setMoviesData] = useState()\r\n    // useEffect(() => {\r\n    //     setMoviesData(props.mov)\r\n    // }, [props.mov])\r\n    var config = {\r\n        apiKey: \"apiKey\",\r\n        authDomain: \"react-movies-database.firebaseapp.com\",\r\n        databaseURL: \"https://react-movies-database-default-rtdb.firebaseio.com/\",\r\n        storageBucket: \"bucket.appspot.com\"\r\n      };\r\n\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(config);\r\n      }\r\n    if (props.loading) {\r\n        return <Spinner/>\r\n      }\r\n    // useEffect(() => {\r\n    //     props.setMoviesDataset(moviesData)\r\n    // }, [moviesData])\r\n\r\n    // moviesData.push({userId: localStorage.userId})\r\n\r\n    const onClickHandler = (index, ranked) => {\r\n        //props.setMovies( arr => ([...arr, arr[index].watched=true], arr.slice(0, props.movies.length)))\r\n        props.setWatched(index, ranked)\r\n        props.setDatabase()\r\n\r\n        // let path = localStorage.userId\r\n        // firebase.database().ref(path +\"/\").set(props.mov)\r\n        // if (!props.loading)\r\n    }\r\n    const onUndoHandler= (index, ranked) => {\r\n        //props.setMovies( arr => ([...arr, arr[index].watched=false], arr.slice(0, props.movies.length)))\r\n        //let path = localStorage.userId\r\n        props.setNotWatched(index, ranked)\r\n        props.setDatabase()\r\n    }\r\n\r\n    let checkBox = (\r\n    <div class=\"form-check\">\r\n        <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value={props.mov}  />\r\n        <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n        Not Watched\r\n        </label>\r\n    </div>\r\n  )\r\n  if (!props.searching){\r\n    return props.mov.slice(props.indexOfFirstPost, props.indexOfLastPost).map((st, index) => {\r\n        const { ranked, releaseDate, imdbRating, originalTitle, year, watched } = st\r\n        if(isAuth){return (\r\n            <tr key={releaseDate}>\r\n                <td >{ranked}</td>\r\n                <td>{imdbRating}</td>\r\n                <td>{originalTitle}</td>\r\n                <td>{year}</td>\r\n                <td>{watched ? <a onClick={() => onUndoHandler(index, ranked)}> ✔️ Watched </a> : <a onClick={() => onClickHandler(index, ranked)}>{checkBox}</a>}</td>\r\n            </tr>\r\n            \r\n            )}\r\n        else return (\r\n            <tr key={releaseDate}>\r\n                <td >{index + 1 }</td>\r\n                <td>{imdbRating}</td>\r\n                <td>{originalTitle}</td>\r\n                <td>{year}</td>\r\n            </tr>\r\n            )\r\n    })\r\n    }\r\n  else {\r\n    return props.filtered.map((st, index) => {\r\n        const { ranked, releaseDate, imdbRating, originalTitle, year, watched } = st\r\n        if(isAuth){return (\r\n            <tr key={releaseDate}>\r\n                <td >{ranked}</td>\r\n                <td>{imdbRating}</td>\r\n                <td>{originalTitle}</td>\r\n                <td>{year}</td>\r\n                <td>{watched ? <a onClick={() => onUndoHandler(index, ranked)}> ✔️ Watched </a> : <a onClick={() => onClickHandler(index, ranked)}>{checkBox}</a>}</td>\r\n            </tr>\r\n            \r\n            )}\r\n     \r\n    })\r\n  }\r\n}\r\n\r\nconst mapStateToProps  = (state) => (\r\n        {mov: state.movies,\r\n        loading: state.loading,\r\n        filtered: state.filteredMovies,\r\n        searching: state.searching\r\n        })\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      setWatched: (index, ranked) => \r\n      dispatch({\r\n         type: \"WATCHED\",\r\n         payload: index,\r\n         ranked: ranked\r\n      }),\r\n      setNotWatched: (index, ranked) => dispatch({\r\n        type: \"NOT_WATCHED\",\r\n        payload: index,\r\n        ranked: ranked\r\n      }),\r\n    setDatabase: () => dispatch({\r\n          type: 'DATABASE_SET'\r\n       })\r\n}\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableData); ","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\PerPageSelector.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Pagination.js",["111"],"import React, { useState } from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nconst Pagination = (props) => {\r\n    const pageNumbers = [];\r\n    const [activePage, setActivePage] = useState(1)\r\n\r\n    // const onPageClick = number => {\r\n    //     props.paginate(number)\r\n    //     setActivePage(number)\r\n    // }\r\n\r\n    const isActive = number => {\r\n        if (number === activePage) {\r\n            return 'active'\r\n        }\r\n    }\r\n\r\n    for (let i=1; i<= props.totalPages; i++ ) {\r\n        pageNumbers.push(i)\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className='pagination'>\r\n                {pageNumbers.map((number, index) => (\r\n                    <li key={number} className={'page-item ' + isActive(number)}>\r\n                        <button \r\n                        className={`button pagination-link ${\r\n                            props.currentPage === index + 1\r\n                              ? \"is-current\"\r\n                              : \"\"\r\n                          }`}\r\n                          aria-label=\"Page 1\"\r\n                          onClick={() => props.loadExactPage(index + 1)}\r\n                          aria-current=\"page\"\r\n                        >\r\n                          {index + 1}\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        countPerPage: state.countPerPage,\r\n        currentCount: state.currentCount,\r\n        currentPage: state.currentPage,\r\n        filteredPages: state.filteredPages,\r\n        totalCount: state.totalCount,\r\n        totalPages: state.totalPages,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        // loadData: () => dispatch({\r\n        //     type: \"LOAD_DATA\",\r\n        //     payload: 1\r\n        // }),\r\n        //\r\n        // nextPage: (page) => \r\n        //     dispatch({\r\n        //         type: \"LOAD_NEW_PAGE\",\r\n        //         payload: page = 1\r\n        //     }),\r\n        //\r\n        // previousPage: (page) =>\r\n        //     dispatch({\r\n        //         type: \"LOAD_NEW_PAGE\",\r\n        //         payload: page = -1\r\n        //     }),\r\n        //\r\n        loadExactPage: (index) => \r\n        {console.log(index)\r\n            dispatch({\r\n                type: \"LOAD_EXACT_PAGE\",\r\n                payload: index\r\n            })    \r\n    }}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\r\n","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Spinner\\Spinner.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\FilterSelectorTest.js",["112"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nconst FilterSelector = (props) => {\r\n    let [newData, setNewData] = useState(props.movies)\r\n    const [filterState, setFilterState] = useState(null)\r\n  \r\n  const load = _ => {\r\n    axios.get('https://react-movies-database-default-rtdb.firebaseio.com/Table.json').then(response => {\r\n      setNewData(response.data)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    load();\r\n  }, [])\r\n    const onFilterHandler = (event) => {\r\n        \r\n        setFilterState(event)\r\n        if(event === 'Not Completed') {\r\n            return (props.setMovies(newData.filter(entry => Object.values(entry).includes(false))))\r\n        }\r\n        else if(event === 'Completed') {\r\n            return (props.setMovies(newData.filter(entry => Object.values(entry).includes(true))))\r\n        }\r\n        else {\r\n            return props.setMovies(newData)\r\n        }\r\n    }\r\n    return(\r\n<th  onChange={event => onFilterHandler(event.target.value)}>\r\n            <select  >\r\n            <option >\r\n                Clear Filter\r\n           </option>\r\n           <option>\r\n                Completed\r\n           </option>\r\n           <option>\r\n                Not Completed\r\n           </option>\r\n            </select>\r\n        </th>\r\n    )\r\n        \r\n}\r\n\r\nexport default FilterSelector",["113","114"],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Table.js",["115","116","117","118","119","120","121","122"],"import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport TableData from './TableData';\r\nimport TableHeader from './TableHeader.js';\r\nimport Navigation from './Navigation.js'\r\nimport PerPageSelector from './PerPageSelector';\r\nimport Pagination from './Pagination';\r\nimport Spinner from './Spinner/Spinner';\r\nimport {connect} from 'react-redux';\r\nimport './Table.css'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport firebase from 'firebase';\r\n\r\n\r\nconst Table = (props) => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [moviesData, setMoviesData] = useState(props.mov)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [postsPerPage, setPostsPerPage] = useState(10)\r\n  const [ascending, setAscending] = useState(true)\r\n\r\n  console.warn = console.error = () => {};\r\n  var config = {\r\n    apiKey: \"apiKey\",\r\n    authDomain: \"react-movies-database.firebaseapp.com\",\r\n    databaseURL: \"https://react-movies-database-default-rtdb.firebaseio.com/\",\r\n    storageBucket: \"bucket.appspot.com\"\r\n  };\r\n\r\n  if (firebase.apps.length === 0) {\r\n    firebase.initializeApp(config);\r\n  }\r\n\r\n  // const load = _ => {\r\n  //     setMovies(currentPosts)\r\n  // }\r\n//   useEffect(() => {\r\n//      setMoviesData(props.movies);\r\n//  }, [props.movies])\r\n// useEffect(() => {\r\n//   if (props.searching){\r\n//     setMoviesData(props.filtered)}\r\n// }, [props.filtered])\r\n\r\n//  useEffect(() => {\r\n//   if (!props.searching){\r\n//   setMoviesData(props.movies)};\r\n// }, [props.movies])\r\n  \r\n  // useEffect(() => {\r\n  //   setCurrentPage(1);\r\n  // }, [postsPerPage])\r\n  \r\n  if (props.loading) {\r\n    return <Spinner/>\r\n  }\r\n    // const onHeaderClick = headerName => {\r\n    //   props.setMovies(sort(headerName))\r\n    // }\r\n  \r\n    // const sort = param => {\r\n    //   if(ascending){\r\n    //     setAscending(false)\r\n    //     return [].concat(props.movies)\r\n    //     .sort((a, b) => a[param] < b[param] ? 1 : -1)\r\n    //     .map((item, i) => \r\n    //         item\r\n    //     );\r\n    //   }\r\n    //   else {\r\n    //     setAscending(true)\r\n    //     return [].concat(props.movies)\r\n    //     .sort((a, b) => a[param] > b[param] ? 1 : -1)\r\n    //     .map((item, i) => \r\n    //         item\r\n    //     );\r\n    //   }\r\n    // }\r\n    \r\n    const indexOfLastPost = props.currentCount\r\n    console.log(['moviesData'], props.currentPage)\r\n    console.log(['moviesData'], indexOfLastPost)\r\n\r\n    const indexOfFirstPost = indexOfLastPost - props.countPerPage\r\n    console.log(['moviesData'], props.countPerPage)\r\n    console.log(['moviesData'], props.currentCount)\r\n\r\n    //const currentPosts = moviesData.slice(indexOfFirstPost, indexOfLastPost)\r\n    // console.log(['moviesData'], indexOfLastPost)\r\n    // console.log(['moviesData'], indexOfFirstPost)\r\n    // console.log(['moviesData'], currentPosts)\r\n    // const paginate = pageNumber => \r\n    // {\r\n      //setCurrentPage(pageNumber)\r\n      //setcurr(postsPerPage)\r\n    //}\r\n    return (     \r\n        <div class='Wrapper'>\r\n        {loading ? <Spinner /> : null} \r\n        <table class={\"table table-bordered text-center\"}>\r\n          <thead class=\"thead-dark\">\r\n            <TableHeader\r\n              movies={moviesData}\r\n              setMovies={props.setMovies}\r\n             />\r\n          </thead>\r\n           <tbody>\r\n            <TableData\r\n            indexOfFirstPost={indexOfFirstPost}\r\n            indexOfLastPost={indexOfLastPost}\r\n            movies={moviesData}\r\n            setMovies={setMoviesData}\r\n            pageSize={postsPerPage}\r\n            />\r\n           </tbody>\r\n        </table>\r\n          <Pagination\r\n          movies={moviesData}\r\n          postsPerPage={postsPerPage}\r\n          totalPosts={moviesData.length}\r\n          //paginate={paginate}\r\n          />\r\n          <PerPageSelector \r\n          postsPerPage={postsPerPage}\r\n          setPostsPerPage={setPostsPerPage}\r\n          movies={moviesData}\r\n          setMovies={props.setMoviesData}\r\n          />\r\n     </div>\r\n      )\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n      state: state,\r\n      mov:state.movies,\r\n      loading: state.loading,\r\n      filtered: state.filteredMovies,\r\n      searching: state.searching,\r\n      countPerPage: state.countPerPage,\r\n      currentCount: state.currentCount,\r\n      currentPage: state.currentPage,\r\n      filteredPages: state.filteredPages,\r\n      totalCount: state.totalCount,\r\n      totalPages: state.totalPages,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Table);","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Auth.js",["123"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navigation from './Navigation';\r\nimport SignInCard from './SignInCard';\r\n\r\nconst Auth = (props) => {\r\n\r\nlet [isAuth, setIsAuth] = useState(false)\r\nconst [loading, setLoading] = useState(true)\r\nlet [authMovies, setAuthMovies] = useState()\r\n\r\nuseEffect(() => {\r\n  load();\r\n}, [])\r\nconst load = _ => {\r\n    axios.get('https://react-movies-database-default-rtdb.firebaseio.com/Table.json').then(response => {\r\n    console.log(response.data)\r\n    setAuthMovies(response.data.map((obj, index)=> ({ ...obj, ranked: index+1 })))\r\n    setLoading(false)\r\n  })\r\n  .catch(error => console.log(error))\r\n}\r\n  \r\nreturn (\r\n  <div>\r\n    <Navigation \r\n    isAuth={isAuth}\r\n    setIsAuth={setIsAuth}\r\n    />\r\n    <SignInCard \r\n    movies={authMovies}\r\n    isAuth={isAuth}\r\n    setIsAuth={setIsAuth}\r\n    />\r\n   </div>\r\n)}\r\n\r\n\r\nexport default Auth;","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\Navigation.js",["124","125","126","127","128","129","130","131","132","133"],"import React, {useState, useEffect} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useHistory, BrowserRouter, Route, Switch, Redirect  } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {filterByValue} from './redux/actions'\r\n\r\n\r\nconst Navigation = (props) => {\r\n  let [keyword, setKeyword] = useState(\"\")\r\n  let [newData, setNewData] = useState(props.mov)\r\n  let history = useHistory()\r\n  let isSignUp = props.isAuth\r\n  let [isAuth, setIsAuth] = useState(localStorage.isAuth)\r\n  //  const load = _ => {\r\n  //   if(localStorage.isAuth){\r\n  //     axios.get('https://react-movies-database-default-rtdb.firebaseio.com/' + localStorage.userId + '.json').then(response => {\r\n  //     setNewData(response.data)\r\n  //   }).catch(error => console.log(error))\r\n  // }\r\n  // else {\r\n  //   axios.get('https://react-movies-database-default-rtdb.firebaseio.com/Table.json').then(response => {\r\n  //     setNewData(response.data)\r\n  //   }).catch(error => console.log(error))\r\n  // }\r\n  //  }\r\n  useEffect(() => {\r\n    setNewData(props.movies);\r\n  }, [keyword])\r\n\r\n  const filterByInput = (e) =>{\r\n    let input = e.target.value\r\n    props.dispatch(filterByValue({value: input}))\r\n  }\r\n  //   setKeyword(event.target.value)\r\n  //   props.setMovies(newData.filter(entry => Object.values(entry).some(val => typeof val === \"string\" && val.toLocaleLowerCase().includes(event.target.value.toLocaleLowerCase()))));\r\n  // }\r\n  let searchBar = isAuth ?  (\r\n  <form class=\"form-inline\">\r\n    <input \r\n    class=\"form-control mr-sm-2\" \r\n    aria-label=\"Search\"\r\n    type=\"text\"\r\n    placeholder=\"Search Title...\"\r\n    onChange={(e) => filterByInput(e)}\r\n    />\r\n  </form>) : null\r\n\r\n  let table = isAuth ? \r\n  (<li class=\"nav-item\">\r\n  <a class=\"nav-link\" href=\"/table\">Table</a>\r\n  </li>) : null\r\n\r\n  const onLoginHandler = () => {\r\n    history.push('/auth')\r\n  }\r\n\r\n  const onLogoutHandler = () => {\r\n    localStorage.removeItem('expirationDate') \r\n    localStorage.removeItem('userId') \r\n    localStorage.removeItem('token') \r\n    localStorage.removeItem('isAuth')\r\n    history.push('/auth')\r\n  }\r\n\r\n  let loginButton = !localStorage.isAuth ?\r\n    <button \r\n    type=\"button\" \r\n    class=\"btn btn-outline-success\"\r\n    href=\"/auth\"\r\n    onClick={onLoginHandler}\r\n    > Login </button> : null\r\n\r\n  let logoutButton =\r\n    <button \r\n    type=\"button\" \r\n    class=\"btn btn-outline-secondary\"\r\n    href=\"/\"\r\n    onClick={onLogoutHandler}\r\n    >Logout</button>\r\n\r\n   \r\n\r\nreturn (\r\n<nav class=\"navbar sticky-top navbar-expand navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"/\">{isAuth ? 'Hi ' + props.firstName : 'RMD'}</a>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"/\">Home <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item active\">\r\n      {table}\r\n      </li>\r\n    </ul>\r\n    <form class=\"form-inline my-2\">\r\n    {isAuth ? searchBar : null}\r\n    {isAuth ? logoutButton : loginButton}\r\n    </form>\r\n  </div>\r\n</nav>\r\n)}\r\n\r\n\r\nconst mapStateToProps  = (state) => ({\r\n  mov: state.movies,\r\n  firstName: state.firstName\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navigation)\r\n","C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\NavigationBar.js",["134","135","136","137","138","139"],"import React, {useState, useEffect} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst NavigationBar = (props) => {\r\n  let [keyword, setKeyword] = useState(\"\")\r\n  let [newData, setNewData] = useState(props.movies)\r\n  let history = useHistory()\r\n\r\n   const load = _ => {\r\n    axios.get('https://react-movies-database-default-rtdb.firebaseio.com/.json').then(response => {\r\n      setNewData(response.data)\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    load();\r\n  }, [])\r\n  const onLogoutHandler = () => {\r\n    history.push('/')\r\n    props.setIsAuth({\r\n      token: '',\r\n      userId: '',\r\n      expiresIn: ''\r\n    })\r\n  }\r\n \r\n  console.log(props.isAuth)\r\n\r\n  const onChangeHandler = event => {\r\n    setKeyword(event.target.value)\r\n    props.setMovies(newData.filter(entry => Object.values(entry).some(val => typeof val === \"string\" && val.toLocaleLowerCase().includes(event.target.value.toLocaleLowerCase()))));\r\n  }\r\n  let searchBar = !props.isAuth ?  (<form class=\"form-inline my-2 my-lg-0\">\r\n  <input \r\n  class=\"form-control mr-sm-2\" \r\n  aria-label=\"Search\"\r\n  type=\"text\"\r\n  value={keyword}\r\n  placeholder=\"Search Title...\"\r\n  onChange={onChangeHandler}\r\n  />\r\n</form>) : null\r\n\r\n  let table = !props.isAuth ? <li class=\"nav-item\">\r\n  <a class=\"nav-link\" href=\"#\">Table</a>\r\n</li> : null\r\n\r\n  let logoutButton = !props.isSignUp ? (\r\n    <button \r\n    type=\"button\" \r\n    class=\"btn btn-secondary\"\r\n    href=\"/\"\r\n    onClick={onLogoutHandler}\r\n    >Logout</button>\r\n  ) : null\r\n  \r\n  let saveTableButton = !props.isSignUp ? (\r\n    <button \r\n    type=\"button\"\r\n    class=\"btn btn-success\"\r\n    href=\"/\"\r\n    onClick={onLogoutHandler}\r\n    >Save</button>\r\n  ) : null\r\n  \r\nreturn (\r\n<nav class=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"/\">Home <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      {table}\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Dropdown\r\n        </a>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n          <a class=\"dropdown-item\" href=\"#\">Action</a>\r\n          <a class=\"dropdown-item\" href=\"#\">Another action</a>\r\n          <div class=\"dropdown-divider\"></div>\r\n          <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n        </div>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n         {saveTableButton}\r\n      </li>\r\n      <li class=\"nav-item\">\r\n         {logoutButton}\r\n      </li>\r\n    </ul>\r\n  {searchBar}\r\n  </div>\r\n</nav>\r\n)}\r\nexport default NavigationBar",["140","141"],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\SignInCard.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\UserTable\\FirebaseTests\\FirebaseTest.js",["142","143","144"],"import React, {useState} from 'react'\r\nimport axios from 'axios'\r\nimport firebase from 'firebase';\r\n\r\n\r\nconst FirebaseTest = () => {\r\n  const [loadData, setLoadData] = useState()\r\n//   Set the configuration for your app\r\n//   TODO: Replace with your project's config object\r\n  var config = {\r\n    apiKey: \"apiKey\",\r\n    authDomain: \"react-movies-database.firebaseapp.com\",\r\n    databaseURL: \"https://react-movies-database-default-rtdb.firebaseio.com/\",\r\n    storageBucket: \"bucket.appspot.com\"\r\n  };\r\n\r\n  if (firebase.apps.length === 0) {\r\n    firebase.initializeApp(config);\r\n  }\r\n//   firebase.initializeApp(config);\r\n//   const newArray=[...movies, {userId: localStorage.userId}]\r\n//   console.log(newArray)\r\n//   axios.post('https://react-movies-database-default-rtdb.firebaseio.com/.json?auth=' + localStorage.token, newArray)\r\n  \r\n//   Get a reference to the database service\r\nconsole.log(localStorage.userId)\r\n\r\n  const loadTable = () => {\r\n    const queryParams = '?auth=' + localStorage.token \r\n    axios.get('https://react-movies-database-default-rtdb.firebaseio.com/' +'Table'+ '.json')\r\n          .then(response => {\r\n            const fetchedData = [];\r\n            for (let key in response.data) {\r\n                fetchedData.push({\r\n                    ...response.data[key],\r\n                    id: key\r\n                })\r\n          }\r\n          setLoadData(fetchedData)\r\n        })\r\n          .catch(error => console.log(error))\r\n          }\r\n    console.log(loadData)\r\n  function writeUserData(userId, name, email, imageUrl) {\r\n      let path = localStorage.userId\r\n    firebase.database().ref(path + \"/\").set(loadData);\r\n  }\r\n    return(\r\n        <div>\r\n            <button \r\n            onClick={writeUserData}\r\n            >Save Table\r\n            </button>\r\n            <button \r\n            onClick={loadTable}\r\n            >Load Table\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FirebaseTest;",["145","146"],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\reducer.js",["147","148","149","150"],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\utility.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\types.js",[],"C:\\React\\Exercises\\React Movies Database\\react-movies-database\\src\\redux\\actions.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":13},{"ruleId":"155","severity":1,"message":"159","line":15,"column":10,"nodeType":"157","messageId":"158","endLine":15,"endColumn":17},{"ruleId":"155","severity":1,"message":"160","line":15,"column":19,"nodeType":"157","messageId":"158","endLine":15,"endColumn":29},{"ruleId":"161","severity":1,"message":"162","line":20,"column":5,"nodeType":"163","endLine":20,"endColumn":7,"suggestions":"164"},{"ruleId":"155","severity":1,"message":"165","line":6,"column":17,"nodeType":"157","messageId":"158","endLine":6,"endColumn":26},{"ruleId":"151","replacedBy":"166"},{"ruleId":"153","replacedBy":"167"},{"ruleId":"155","severity":1,"message":"168","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":26},{"ruleId":"155","severity":1,"message":"165","line":7,"column":18,"nodeType":"157","messageId":"158","endLine":7,"endColumn":27},{"ruleId":"155","severity":1,"message":"169","line":8,"column":12,"nodeType":"157","messageId":"158","endLine":8,"endColumn":22},{"ruleId":"155","severity":1,"message":"170","line":8,"column":24,"nodeType":"157","messageId":"158","endLine":8,"endColumn":37},{"ruleId":"171","severity":1,"message":"172","line":64,"column":32,"nodeType":"173","endLine":64,"endColumn":80},{"ruleId":"171","severity":1,"message":"172","line":64,"column":99,"nodeType":"173","endLine":64,"endColumn":148},{"ruleId":"174","severity":1,"message":"175","line":79,"column":43,"nodeType":"176","messageId":"177","endLine":79,"endColumn":45},{"ruleId":"171","severity":1,"message":"172","line":87,"column":32,"nodeType":"173","endLine":87,"endColumn":80},{"ruleId":"171","severity":1,"message":"172","line":87,"column":99,"nodeType":"173","endLine":87,"endColumn":148},{"ruleId":"155","severity":1,"message":"178","line":7,"column":24,"nodeType":"157","messageId":"158","endLine":7,"endColumn":37},{"ruleId":"155","severity":1,"message":"179","line":7,"column":12,"nodeType":"157","messageId":"158","endLine":7,"endColumn":23},{"ruleId":"151","replacedBy":"180"},{"ruleId":"153","replacedBy":"181"},{"ruleId":"155","severity":1,"message":"168","line":1,"column":16,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":13},{"ruleId":"155","severity":1,"message":"182","line":5,"column":8,"nodeType":"157","messageId":"158","endLine":5,"endColumn":18},{"ruleId":"155","severity":1,"message":"160","line":17,"column":19,"nodeType":"157","messageId":"158","endLine":17,"endColumn":29},{"ruleId":"155","severity":1,"message":"183","line":19,"column":10,"nodeType":"157","messageId":"158","endLine":19,"endColumn":21},{"ruleId":"155","severity":1,"message":"184","line":19,"column":23,"nodeType":"157","messageId":"158","endLine":19,"endColumn":37},{"ruleId":"155","severity":1,"message":"185","line":21,"column":10,"nodeType":"157","messageId":"158","endLine":21,"endColumn":19},{"ruleId":"155","severity":1,"message":"186","line":21,"column":21,"nodeType":"157","messageId":"158","endLine":21,"endColumn":33},{"ruleId":"155","severity":1,"message":"159","line":10,"column":8,"nodeType":"157","messageId":"158","endLine":10,"endColumn":15},{"ruleId":"155","severity":1,"message":"187","line":3,"column":22,"nodeType":"157","messageId":"158","endLine":3,"endColumn":35},{"ruleId":"155","severity":1,"message":"188","line":3,"column":37,"nodeType":"157","messageId":"158","endLine":3,"endColumn":42},{"ruleId":"155","severity":1,"message":"189","line":3,"column":44,"nodeType":"157","messageId":"158","endLine":3,"endColumn":50},{"ruleId":"155","severity":1,"message":"190","line":3,"column":52,"nodeType":"157","messageId":"158","endLine":3,"endColumn":60},{"ruleId":"155","severity":1,"message":"156","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":13},{"ruleId":"155","severity":1,"message":"191","line":10,"column":17,"nodeType":"157","messageId":"158","endLine":10,"endColumn":27},{"ruleId":"155","severity":1,"message":"192","line":11,"column":8,"nodeType":"157","messageId":"158","endLine":11,"endColumn":15},{"ruleId":"155","severity":1,"message":"193","line":13,"column":7,"nodeType":"157","messageId":"158","endLine":13,"endColumn":15},{"ruleId":"155","severity":1,"message":"165","line":14,"column":16,"nodeType":"157","messageId":"158","endLine":14,"endColumn":25},{"ruleId":"161","severity":1,"message":"194","line":29,"column":6,"nodeType":"163","endLine":29,"endColumn":15,"suggestions":"195"},{"ruleId":"171","severity":1,"message":"196","line":46,"column":3,"nodeType":"173","endLine":46,"endColumn":32},{"ruleId":"171","severity":1,"message":"196","line":69,"column":3,"nodeType":"173","endLine":69,"endColumn":36},{"ruleId":"171","severity":1,"message":"196","line":81,"column":9,"nodeType":"173","endLine":81,"endColumn":154},{"ruleId":"171","severity":1,"message":"196","line":85,"column":11,"nodeType":"173","endLine":85,"endColumn":45},{"ruleId":"171","severity":1,"message":"196","line":86,"column":11,"nodeType":"173","endLine":86,"endColumn":45},{"ruleId":"171","severity":1,"message":"196","line":88,"column":11,"nodeType":"173","endLine":88,"endColumn":45},{"ruleId":"151","replacedBy":"197"},{"ruleId":"153","replacedBy":"198"},{"ruleId":"155","severity":1,"message":"199","line":29,"column":11,"nodeType":"157","messageId":"158","endLine":29,"endColumn":22},{"ruleId":"200","severity":1,"message":"201","line":30,"column":76,"nodeType":"202","messageId":"203","endLine":30,"endColumn":77},{"ruleId":"200","severity":1,"message":"201","line":30,"column":84,"nodeType":"202","messageId":"203","endLine":30,"endColumn":85},{"ruleId":"151","replacedBy":"204"},{"ruleId":"153","replacedBy":"205"},{"ruleId":"155","severity":1,"message":"206","line":1,"column":83,"nodeType":"157","messageId":"158","endLine":1,"endColumn":92},{"ruleId":"207","severity":1,"message":"208","line":27,"column":1,"nodeType":"209","endLine":230,"endColumn":2},{"ruleId":"210","severity":1,"message":"211","line":73,"column":9,"nodeType":"212","messageId":"213","endLine":98,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":99,"column":13,"nodeType":"212","messageId":"213","endLine":103,"endColumn":14},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["216"],"'setIsAuth' is assigned a value but never used.",["214"],["215"],"'useEffect' is defined but never used.","'moviesData' is assigned a value but never used.","'setMoviesData' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setActivePage' is assigned a value but never used.","'filterState' is assigned a value but never used.",["214"],["215"],"'Navigation' is defined but never used.","'currentPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'ascending' is assigned a value but never used.","'setAscending' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'setKeyword' is assigned a value but never used.","'newData' is assigned a value but never used.","'isSignUp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.movies'. Either include it or remove the dependency array. If 'setNewData' needs the current value of 'props.movies', you can also switch to useReducer instead of useState and read 'props.movies' in the reducer.",["217"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["214"],["215"],"'queryParams' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["214"],["215"],"'LOAD_DATA' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [props]",{"range":"222","text":"223"},"Update the dependencies array to be: [keyword, props.movies]",{"range":"224","text":"225"},[566,568],"[props]",[1113,1122],"[keyword, props.movies]"]