[{"C:\\React\\react-movies-database-main\\src\\index.js":"1","C:\\React\\react-movies-database-main\\src\\App.js":"2","C:\\React\\react-movies-database-main\\src\\redux\\reducer.js":"3","C:\\React\\react-movies-database-main\\src\\SignIn\\Auth.js":"4","C:\\React\\react-movies-database-main\\src\\redux\\actions.js":"5","C:\\React\\react-movies-database-main\\src\\redux\\types.js":"6","C:\\React\\react-movies-database-main\\src\\Spinner\\Spinner.js":"7","C:\\React\\react-movies-database-main\\src\\SignIn\\SignInCard.js":"8","C:\\React\\react-movies-database-main\\src\\Navigation\\Navigation.js":"9","C:\\React\\react-movies-database-main\\src\\Table\\Table.js":"10","C:\\React\\react-movies-database-main\\src\\firebase\\config.js":"11","C:\\React\\react-movies-database-main\\src\\Table\\TableHeader.js":"12","C:\\React\\react-movies-database-main\\src\\Navigation\\Pagination.js":"13","C:\\React\\react-movies-database-main\\src\\Table\\TableData.js":"14","C:\\React\\react-movies-database-main\\src\\Navigation\\PerPageSelector.js":"15","C:\\React\\react-movies-database-main\\src\\AddMovie\\AddMovie.js":"16"},{"size":1398,"mtime":1612607032258,"results":"17","hashOfConfig":"18"},{"size":635,"mtime":1612530884672,"results":"19","hashOfConfig":"18"},{"size":7550,"mtime":1612607070506,"results":"20","hashOfConfig":"18"},{"size":275,"mtime":1612372275905,"results":"21","hashOfConfig":"18"},{"size":2326,"mtime":1612607066699,"results":"22","hashOfConfig":"18"},{"size":621,"mtime":1612607072889,"results":"23","hashOfConfig":"18"},{"size":152,"mtime":1612372276049,"results":"24","hashOfConfig":"18"},{"size":5634,"mtime":1612372275977,"results":"25","hashOfConfig":"18"},{"size":2345,"mtime":1612607050737,"results":"26","hashOfConfig":"18"},{"size":703,"mtime":1612372276114,"results":"27","hashOfConfig":"18"},{"size":445,"mtime":1612372276242,"results":"28","hashOfConfig":"18"},{"size":1200,"mtime":1612607083546,"results":"29","hashOfConfig":"18"},{"size":1508,"mtime":1612372275848,"results":"30","hashOfConfig":"18"},{"size":1615,"mtime":1612607079793,"results":"31","hashOfConfig":"18"},{"size":1258,"mtime":1612372275872,"results":"32","hashOfConfig":"18"},{"size":4313,"mtime":1612607780548,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ubyny5",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\React\\react-movies-database-main\\src\\index.js",[],"C:\\React\\react-movies-database-main\\src\\App.js",["72"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Spinner from './Spinner/Spinner'\nimport Table from './Table/Table';\nimport Navigation from './Navigation/Navigation';\nimport { getMovies } from './redux/actions'\nimport './App.css';\n\nconst App = _ => {\n  const dispatch = useDispatch()\n  const loading = useSelector(state => state.loading)\n\n  useEffect(() => {\n    dispatch(getMovies())\n  },[])\n  \n  return <>\n        {loading ? <Spinner /> : <>\n          <Navigation/>\n          <Table/>\n        </>}\n      </>\n}\n\nexport default App;",["73","74"],"C:\\React\\react-movies-database-main\\src\\redux\\reducer.js",["75"],"import { GET_MOVIES, WATCHED, FILTER_BY_VALUE, DATABASE_SET, SORT_BY, LOAD_EXACT_PAGE, MOVIES_PER_PAGE, SET_FIRST_NAME, SET_NEW_MOVIE } from './types'\nimport firebase from 'firebase';\n\nconst initialState = {\n    movies: [],\n    filteredMovies: [],\n    filteredMoviesInit: [],\n    searching: false,\n    currentPage: 1,\n    countPerPage: '',\n    loading: true,\n    firstName: '',\n    appliedFilters: []\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_MOVIES:\n            let getState = Object.assign({}, state)\n            getState.movies = action.payload.data.slice(0, action.payload.data.length).map((obj, index)=> ({ ...obj, ranked: index+1 }))\n            getState.loading = false\n            getState.firstName = action.payload.firstName\n            getState.countPerPage = action.payload.countPerPage || 10\n            getState.currentCount = getState.countPerPage\n            getState.totalCount = action.payload.count\n            getState.currentPage = 1\n            getState.totalPages = Math.ceil(getState.totalCount / getState.countPerPage)\n            getState.filteredPages = Math.ceil(getState.totalCount / getState.countPerPage)\n            getState.upperCount = getState.countPerPage * getState.currentPage\n            getState.lowerCount = getState.upperCount - getState.countPerPage\n            getState.filteredMovies = getState.movies.slice(getState.lowerCount, getState.upperCount)\n            console.log(action.payload)\n\n            return getState\n\n        case WATCHED:\n            let watched = Object.assign({}, state);\n            watched.filteredMovies[action.payload].watched = !watched.filteredMovies[action.payload].watched\n            for (let i; i < watched.movies.length; i++) {\n                if (watched.movies[i].ranked === action.ranked)\n                    return watched.movies.watched = !watched.movies.watched\n            }\n\n            return watched\n\n        case FILTER_BY_VALUE:\n            let newState = Object.assign({}, state);\n            let value = action.payload.value;\n            let filteredMovies = newState.movies.filter(movie => {\n                return movie.originalTitle.includes(value)\n\n            });\n            console.log(filteredMovies)\n            let appliedFilters = state.appliedFilters;\n            if (value) {\n                newState.searching = true\n                newState.filteredMoviesInit = newState.movies.slice(newState.lowerCount, newState.upperCount)\n                appliedFilters = addFilterIfNotExists(FILTER_BY_VALUE, appliedFilters);\n                newState.filteredMovies = filteredMovies;\n                newState.filteredCount = newState.filteredMovies.length;\n                newState.filteredPages = Math.ceil(newState.filteredCount / newState.countPerPage);\n            } else {\n                newState.searching = false\n                appliedFilters = removeFilter(FILTER_BY_VALUE, appliedFilters);\n                if (appliedFilters.length === 0) {\n                    newState.filteredMovies = newState.filteredMoviesInit;\n                    newState.filteredCount = newState.filteredMovies.length;\n                    newState.filteredPages = Math.ceil(newState.filteredCount / newState.countPerPage);\n                }\n            }\n            return newState;\n\n        case SORT_BY:\n            const sortByAlphabetState = Object.assign({}, state);\n            let sortedAlphabetArr = action.order ?\n                sortAsc(sortByAlphabetState.filteredMovies, action.item) :\n                sortDesc(sortByAlphabetState.filteredMovies, action.item);\n            sortByAlphabetState.filteredMovies = sortedAlphabetArr;\n            return sortByAlphabetState;\n\n        case LOAD_EXACT_PAGE:\n            const exactPageState = Object.assign({}, state);\n            const initMoviesLoad = exactPageState.movies\n            const exactPage = action.payload;\n            let upperCountExact = exactPageState.countPerPage * exactPage\n            let lowerCountExact = upperCountExact - exactPageState.countPerPage;\n            let exactMovies = exactPageState.movies.slice(lowerCountExact, upperCountExact);\n            exactPageState.filteredMovies = exactMovies;\n            exactPageState.currentCount = upperCountExact;\n            exactPageState.currentPage = exactPage;\n            window.history.pushState({ page: 1 }, \"title 1\", `?page=${exactPageState.currentPage}`);\n            exactPageState.movies = initMoviesLoad\n\n            return exactPageState;\n\n        case MOVIES_PER_PAGE:\n            const moviesPerPageState = Object.assign({}, state)\n            const initMoviesMPP = moviesPerPageState.movies\n            moviesPerPageState.currentPage = 1\n            moviesPerPageState.countPerPage = action.payload\n            moviesPerPageState.currentCount = moviesPerPageState.totalCount\n            moviesPerPageState.filteredPages = Math.ceil(moviesPerPageState.currentCount / moviesPerPageState.countPerPage)\n            moviesPerPageState.totalPages = moviesPerPageState.filteredPages\n            let currentPageMPP = moviesPerPageState.currentPage\n            let upperCountMPP = moviesPerPageState.countPerPage * currentPageMPP\n            let lowerCountMPP = upperCountMPP - moviesPerPageState.countPerPage;\n            let exactMPP = moviesPerPageState.movies.slice(lowerCountMPP, upperCountMPP);\n            moviesPerPageState.filteredMovies = exactMPP;\n            moviesPerPageState.currentCount = upperCountMPP;\n            moviesPerPageState.movies = initMoviesMPP\n\n            return moviesPerPageState\n\n        case SET_FIRST_NAME:\n            const firstNameState = Object.assign({}, state)\n            firstNameState.firstName = action.payload\n            console.log(firstNameState)\n            return firstNameState\n\n        case DATABASE_SET:\n            databaseSet(state.movies)\n            return {\n                ...state,\n            }\n\n        case SET_NEW_MOVIE:\n            const newMovieState = Object.assign({}, state)\n            console.log(action.payload)\n            console.log(newMovieState.filteredMovies)\n            let newFiltered = newMovieState.filteredMovies\n            let newMovies = newMovieState.movies\n            newFiltered.unshift(action.payload)\n            newMovies.unshift(action.payload)\n            newMovieState.filteredMovies = newFiltered\n            newMovieState.movies = newMovies\n\n            return newMovieState\n\n        default: return state\n    }\n}\n\nfunction addFilterIfNotExists(filter, appliedFilters) {\n    let index = appliedFilters.indexOf(filter);\n    if (index === -1) appliedFilters.push(filter);\n\n    return appliedFilters;\n}\n\nfunction removeFilter(filter, appliedFilters) {\n    let index = appliedFilters.indexOf(filter);\n    appliedFilters.splice(index, 1);\n    return appliedFilters;\n}\n\nfunction databaseSet(movies) {\n    return firebase.database().ref(localStorage.userId + \"/\").update(movies)\n}\n\nfunction sortAsc(arr, field) {\n    return arr.sort(function (a, b) {\n        if (a[field] > b[field]) {\n            return 1;\n        }\n        if (b[field] > a[field]) {\n            return -1;\n        }\n        return 0;\n    })\n}\n\nfunction sortDesc(arr, field) {\n    return arr.sort(function (a, b) {\n        if (a[field] > b[field]) return -1;\n\n        if (b[field] > a[field]) return 1;\n\n        return 0;\n    })\n}","C:\\React\\react-movies-database-main\\src\\SignIn\\Auth.js",[],"C:\\React\\react-movies-database-main\\src\\redux\\actions.js",[],"C:\\React\\react-movies-database-main\\src\\redux\\types.js",[],"C:\\React\\react-movies-database-main\\src\\Spinner\\Spinner.js",[],"C:\\React\\react-movies-database-main\\src\\SignIn\\SignInCard.js",["76"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport './SignInCard.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from 'firebase';\nimport { useDispatch } from 'react-redux'\nimport { getMovies, setDatabase } from '../redux/actions';\n\nconst SignInCard = () => {\n  const dispatch = useDispatch()\n  let [switchSignIn, setSwitchSignIn] = useState(true)\n  let [email, setEmail] = useState('')\n  let [password, setPassword] = useState('')\n  let [firstName, setFirstName] = useState('')\n  let [errors, setErrors] = useState({\n    email: '',\n    password: ''\n  })\n  let history = useHistory()\n  useEffect(() => {\n    dispatch(getMovies())\n  }, [])\n\n  const emailInputHandler = (event) => {\n    setEmail(event.target.value)\n  }\n  const passwordInputHandler = (event) => {\n    setPassword(event.target.value)\n  }\n  const firstNameInputHandler = (event) => {\n    setFirstName(event.target.value)\n  }\n\n  const validateEmail = (email) => {\n    let isValid = true;\n    if (email) {\n      setErrors({ email: \"\" })\n    }\n    if (typeof email !== \"undefined\") {\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n      if (!pattern.test(email)) {\n        isValid = false;\n        setErrors({ email: \"Please enter a valid Email Address.\" })\n      }\n    }\n    return isValid;\n  }\n\n  const validatePassword = (password) => {\n    let isValid = true;\n    if (password) {\n      setErrors({ password: \"\" })\n    }\n    if (typeof password !== \"undefined\") {\n      var reg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,32}$/\n      var test = reg.test(password)\n      if (!test) {\n        isValid = false;\n        setErrors({ password: \"Please enter a valid password\" })\n      }\n      return isValid;\n    }\n  }\n  const SwitchSignInHandler = () => {\n    setSwitchSignIn(!switchSignIn)\n  }\n\n  const onSignUpHandler = (event) => {\n    event.preventDefault()\n    validateEmail(email) && validatePassword(password)\n    firebase.auth().createUserWithEmailAndPassword(email, password).then((userCredential) => {\n      var user = firebase.auth().currentUser\n      user.updateProfile({\n        displayName: firstName})\n      dispatch(getMovies())\n      localStorage.setItem('userId', userCredential.user.uid)\n      history.push('/auth')\n      dispatch(setDatabase())\n      setSwitchSignIn(true)\n      firebase.auth().signOut()\n      alert(\"You are signed up succesfully, please Login\")\n    })\n      .catch((error) => {\n        console.log(error)\n      });\n  }\n\n  const onSignInHandler = (event) => {\n    event.preventDefault()\n    dispatch(getMovies())\n    validateEmail(email) && validatePassword(password)\n    var user = firebase.auth().currentUser;\n    if (user) {\n      console.log(\"user is already signed in\")\n      history.push('/home')\n    } \n    else {\n      firebase.auth().signInWithEmailAndPassword(email, password)\n        .then((userCredential) => {\n          console.log(userCredential.user)\n          localStorage.setItem('firstName', userCredential.user.displayName)\n          localStorage.setItem('userId', userCredential.user.uid)\n          localStorage.setItem('isAuth', true)\n          history.push('/home')\n        })\n        .catch((error) => {\n          console.log(error)\n          alert(error)\n        });\n    }\n  }\n\n  let button = !switchSignIn ? (<Button\n    variant=\"primary\"\n    type=\"submit\"\n    onClick={onSignUpHandler}\n  >\n    Sign Up !\n  </Button>) :\n    (\n      <Button\n        variant=\"primary\"\n        type=\"submit\"\n        onClick={onSignInHandler}\n      >\n        Sign In !\n      </Button>)\n\n  let signMessage = switchSignIn ? (\n    <Form.Label>Please Sign In</Form.Label>\n  ) :\n    <Form.Label>Please Sign Up</Form.Label>\n\n  let switchButton = (\n    <button\n      type=\"button\"\n      class=\"btn btn-success\"\n      onClick={SwitchSignInHandler}>Swtich to {!switchSignIn ? 'Sign In' : \"Sign Up\"}</button>\n  )\n\n  let signCard = (\n    <div class='SignInWrapper'>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          {signMessage}\n          {!switchSignIn ?\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"First Name\"\n                onChange={firstNameInputHandler}\n              />\n            </Form.Group>\n            : null}\n          <Form.Text></Form.Text>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={emailInputHandler}\n          />\n          <div className=\"text-danger\">{errors.email}</div>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={passwordInputHandler}\n          />\n          <div className=\"text-danger\">{errors.password}</div>\n        </Form.Group>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          {switchSignIn ? <Form.Check type=\"checkbox\" label=\"Remember Me\" /> : null}\n        </Form.Group>\n        <Form.Group>{button}</Form.Group>\n        <Form.Group>{switchButton}</Form.Group>\n      </Form>\n    </div>\n  )\n  console.warn = console.error = () => { };\n  return (\n    localStorage.isAuth ? <Redirect to={'/table'} /> : signCard\n  )\n}\n\nexport default SignInCard;","C:\\React\\react-movies-database-main\\src\\Navigation\\Navigation.js",["77","78"],"import React, { useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterByValue, setPerPage } from '../redux/actions'\nimport firebase from 'firebase';\nimport \"bulma/css/bulma.min.css\"\n\nconst Navigation = () => {\n  const dispatch = useDispatch()\n  const searching = useSelector(state => state.searching)\n  let history = useHistory()\n\n  const filterByInput = (event) => {\n    let input = event.target.value.toLowerCase()\n    if(!event.target.value){\n      dispatch(setPerPage())}\n    dispatch(filterByValue({ value: input }))\n  }\n\n  let searchBar = \n    <form class=\"form-inline\">\n      <input\n        class=\"form-control mr-sm-2\"\n        aria-label=\"Search\"\n        type=\"text\"\n        placeholder=\"Search Title...\"\n        onChange={(e) => filterByInput(e)}\n      />\n    </form>\n\n  const onLoginHandler = () => {\n    history.push('/auth')\n  }\n\n  const onLogoutHandler = () => {\n    firebase.auth().signOut()\n    localStorage.removeItem('userId')\n    localStorage.removeItem('isAuth')\n    localStorage.removeItem('firstName')\n    history.push('/auth')\n  }\n\n  let loginButton = !localStorage.isAuth ?\n  <Link to=\"/auth\"> <button\n      type=\"button\"\n      class=\"btn btn-outline-success\"\n      href=\"/auth\"\n      onClick={onLoginHandler}\n    > Login </button> </Link> : null\n\n  let logoutButton =\n    <button\n      type=\"button\"\n      class=\"button is-outlined\"\n      href=\"/\"\n      onClick={onLogoutHandler}\n    >Logout</button>\n\n\n\n  return (\n    <nav class=\"navbar sticky-top navbar-expand navbar-light bg-light\">\n      <a class=\"navbar-brand\" href=\"/\">{localStorage.isAuth ? 'Hi ' + localStorage.firstName : 'RMD'}</a>\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item active\">\n          {localStorage.isAuth ?  <Link to=\"/add-movie\"><button class=\"button is-info\" href=\"/add-movie\">Add New Movies</button></Link>: null}\n          </li>\n        </ul>\n        <form class=\"form-inline my-2\">\n          {searchBar}\n          {localStorage.isAuth ? logoutButton : loginButton}\n        </form>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navigation\n","C:\\React\\react-movies-database-main\\src\\Table\\Table.js",[],"C:\\React\\react-movies-database-main\\src\\firebase\\config.js",[],"C:\\React\\react-movies-database-main\\src\\Table\\TableHeader.js",[],"C:\\React\\react-movies-database-main\\src\\Navigation\\Pagination.js",[],"C:\\React\\react-movies-database-main\\src\\Table\\TableData.js",["79","80"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setWatched, setDatabase } from '../redux/actions'\n\nconst TableData = () => {\n \n  const dispatch = useDispatch()\n  const filtered = useSelector(state => (state.filteredMovies))\n  const state = useSelector(state => (state)) //filtered is not re-rendering without it\n\n  const checkBox = (\n    <div class=\"form-check\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value={filtered} />\n      <label class=\"form-check-label\" for=\"exampleRadios1\">\n        Not Watched\n          </label>\n    </div>)\n\n  const onClickHandler = (index, ranked) => {\n    dispatch(setWatched(index, ranked))\n    dispatch(setDatabase())\n  }\n console.log(state)\n  return (\n    filtered.map((st, index) => {\n      const { ranked, releaseDate, imdbRating, originalTitle, year, watched } = st\n      if (localStorage.isAuth) {\n        return (\n          <tr key={releaseDate}>\n            {/* <td >{ranked}</td> */}\n            <td>{imdbRating}</td>\n            <td>{originalTitle}</td>\n            <td>{year}</td>\n            <td>{watched ? <a onClick={() => onClickHandler(index, ranked)}> ✔️ Watched </a> : <a onClick={() => onClickHandler(index, ranked)}>{checkBox}</a>}</td>\n          </tr>\n  \n        )\n      }\n      else return (\n        <tr key={releaseDate}>\n          {/* <td >{ranked}</td> */}\n          <td>{imdbRating}</td>\n          <td>{originalTitle}</td>\n          <td>{year}</td>\n        </tr>\n      )\n    })\n  )\n}\n\nexport default TableData ","C:\\React\\react-movies-database-main\\src\\Navigation\\PerPageSelector.js",[],"C:\\React\\react-movies-database-main\\src\\AddMovie\\AddMovie.js",["81"],{"ruleId":"82","severity":1,"message":"83","line":16,"column":5,"nodeType":"84","endLine":16,"endColumn":7,"suggestions":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":16,"column":1,"nodeType":"92","endLine":141,"endColumn":2},{"ruleId":"82","severity":1,"message":"83","line":24,"column":6,"nodeType":"84","endLine":24,"endColumn":8,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"98","line":11,"column":9,"nodeType":"96","messageId":"97","endLine":11,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":34,"column":28,"nodeType":"101","endLine":34,"endColumn":77},{"ruleId":"99","severity":1,"message":"100","line":34,"column":96,"nodeType":"101","endLine":34,"endColumn":145},{"ruleId":"82","severity":1,"message":"83","line":15,"column":8,"nodeType":"84","endLine":15,"endColumn":10,"suggestions":"102"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["103"],"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["106"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'searching' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["107"],{"desc":"108","fix":"109"},"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"110"},{"desc":"108","fix":"111"},"Update the dependencies array to be: [dispatch]",{"range":"112","text":"113"},{"range":"114","text":"113"},{"range":"115","text":"113"},[492,494],"[dispatch]",[805,807],[532,534]]