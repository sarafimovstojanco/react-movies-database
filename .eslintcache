[{"C:\\React\\react-movies-database-main\\src\\index.js":"1","C:\\React\\react-movies-database-main\\src\\App.js":"2","C:\\React\\react-movies-database-main\\src\\redux\\reducer.js":"3","C:\\React\\react-movies-database-main\\src\\SignIn\\Auth.js":"4","C:\\React\\react-movies-database-main\\src\\redux\\actions.js":"5","C:\\React\\react-movies-database-main\\src\\redux\\types.js":"6","C:\\React\\react-movies-database-main\\src\\Spinner\\Spinner.js":"7","C:\\React\\react-movies-database-main\\src\\SignIn\\SignInCard.js":"8","C:\\React\\react-movies-database-main\\src\\Table\\Table.js":"9","C:\\React\\react-movies-database-main\\src\\firebase\\config.js":"10","C:\\React\\react-movies-database-main\\src\\Table\\TableHeader.js":"11","C:\\React\\react-movies-database-main\\src\\Navigation\\Pagination.js":"12","C:\\React\\react-movies-database-main\\src\\Table\\TableData.js":"13","C:\\React\\react-movies-database-main\\src\\Navigation\\PerPageSelector.js":"14","C:\\React\\react-movies-database-main\\src\\AddMovie\\AddMovie.js":"15","C:\\React\\react-movies-database-main\\src\\Navigation\\Navbar.js":"16","C:\\React\\react-movies-database-main\\src\\Navigation\\NavCool.js":"17","C:\\React\\react-movies-database-main\\src\\AddMovie\\AddInput.js":"18","C:\\React\\react-movies-database-main\\src\\Table\\MaterialTable.js":"19"},{"size":1398,"mtime":1612608056407,"results":"20","hashOfConfig":"21"},{"size":675,"mtime":1612791849360,"results":"22","hashOfConfig":"21"},{"size":8588,"mtime":1612699874588,"results":"23","hashOfConfig":"21"},{"size":281,"mtime":1612728812390,"results":"24","hashOfConfig":"21"},{"size":2572,"mtime":1612699874588,"results":"25","hashOfConfig":"21"},{"size":611,"mtime":1612699874589,"results":"26","hashOfConfig":"21"},{"size":152,"mtime":1612372276049,"results":"27","hashOfConfig":"21"},{"size":5386,"mtime":1612729767116,"results":"28","hashOfConfig":"21"},{"size":703,"mtime":1612656169512,"results":"29","hashOfConfig":"21"},{"size":445,"mtime":1612372276242,"results":"30","hashOfConfig":"21"},{"size":1145,"mtime":1612699874587,"results":"31","hashOfConfig":"21"},{"size":1508,"mtime":1612649920878,"results":"32","hashOfConfig":"21"},{"size":1826,"mtime":1612699874587,"results":"33","hashOfConfig":"21"},{"size":1258,"mtime":1612372275872,"results":"34","hashOfConfig":"21"},{"size":1252,"mtime":1612791362794,"results":"35","hashOfConfig":"21"},{"size":2274,"mtime":1612699874592,"results":"36","hashOfConfig":"21"},{"size":9868,"mtime":1612737772844,"results":"37","hashOfConfig":"21"},{"size":2981,"mtime":1612742578732,"results":"38","hashOfConfig":"21"},{"size":6196,"mtime":1612799836254,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ubyny5",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\React\\react-movies-database-main\\src\\index.js",[],["88","89"],"C:\\React\\react-movies-database-main\\src\\App.js",["90"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Spinner from './Spinner/Spinner'\r\nimport MaterialTable from './Table/MaterialTable';\r\nimport { getMovies } from './redux/actions'\r\nimport './App.css';\r\nimport NavCool from './Navigation/NavCool';\r\n\r\nconst App = _ => {\r\n  const dispatch = useDispatch()\r\n  const loading = useSelector(state => state.loading)\r\n\r\n  useEffect(() => {\r\n    dispatch(getMovies())\r\n  },[])\r\n  \r\n  return <>\r\n        {loading ? <Spinner /> : <>\r\n          <NavCool/>\r\n          <MaterialTable/>\r\n        </>}\r\n      </>\r\n}\r\n\r\nexport default App;","C:\\React\\react-movies-database-main\\src\\redux\\reducer.js",["91","92"],"import { GET_MOVIES, WATCHED, FILTER_BY_VALUE, DATABASE_SET, SORT_BY, LOAD_EXACT_PAGE, MOVIES_PER_PAGE, SET_FIRST_NAME, SET_NEW_MOVIE, REMOVE_MOVIE } from './types'\r\nimport firebase from 'firebase';\r\nimport { act } from 'react-dom/test-utils';\r\n\r\nconst initialState = {\r\n    movies: [],\r\n    filteredMovies: [],\r\n    filteredMoviesInit: [],\r\n    searching: false,\r\n    currentPage: 1,\r\n    countPerPage: '',\r\n    loading: true,\r\n    firstName: '',\r\n    appliedFilters: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_MOVIES:\r\n            let getState = Object.assign({}, state)\r\n            getState.movies = action.payload.data.slice(0, action.payload.data.length).map((obj, index)=> ({ ...obj, ranked: index+1 }))\r\n            getState.loading = false\r\n            getState.firstName = action.payload.firstName\r\n            getState.countPerPage = action.payload.countPerPage || 10\r\n            getState.currentCount = getState.countPerPage\r\n            getState.totalCount = action.payload.count\r\n            getState.currentPage = 1\r\n            getState.totalPages = Math.ceil(getState.totalCount / getState.countPerPage)\r\n            getState.filteredPages = Math.ceil(getState.totalCount / getState.countPerPage)\r\n            getState.upperCount = getState.countPerPage * getState.currentPage\r\n            getState.lowerCount = getState.upperCount - getState.countPerPage\r\n            getState.filteredMovies = getState.movies.slice(getState.lowerCount, getState.upperCount)\r\n            console.log(action.payload)\r\n\r\n            return getState\r\n\r\n        case WATCHED:\r\n            let watched = Object.assign({}, state);\r\n            watched.filteredMovies[action.payload].watched = !watched.filteredMovies[action.payload].watched\r\n            for (let i; i < watched.movies.length; i++) {\r\n                if (watched.movies[i].ranked === action.ranked)\r\n                    return watched.movies.watched = !watched.movies.watched\r\n            }\r\n\r\n            return watched\r\n\r\n        case FILTER_BY_VALUE:\r\n            let newState = Object.assign({}, state);\r\n            let value = action.payload.value;\r\n            console.log(value)\r\n            let filteredMovies = newState.movies.filter(movie => {\r\n                return movie.originalTitle.toLowerCase().includes(value)\r\n\r\n            });\r\n            let appliedFilters = state.appliedFilters;\r\n            if (value) {\r\n                newState.searching = true\r\n                newState.filteredMoviesInit = newState.movies.slice(newState.lowerCount, newState.upperCount)\r\n                appliedFilters = addFilterIfNotExists(FILTER_BY_VALUE, appliedFilters);\r\n                newState.filteredMovies = filteredMovies;\r\n                newState.filteredCount = newState.filteredMovies.length;\r\n                newState.filteredPages = Math.ceil(newState.filteredCount / newState.countPerPage);\r\n            } else {\r\n                newState.searching = false\r\n                appliedFilters = removeFilter(FILTER_BY_VALUE, appliedFilters);\r\n                if (appliedFilters.length === 0) {\r\n                    newState.filteredMovies = newState.movies.slice(newState.lowerCount, newState.upperCount);\r\n                    newState.filteredCount = newState.filteredMovies.length;\r\n                    newState.filteredPages = Math.ceil(newState.filteredCount / newState.countPerPage);\r\n                }\r\n            }\r\n            return newState;\r\n\r\n        case SORT_BY:\r\n            const sortByAlphabetState = Object.assign({}, state);\r\n            let sortedAlphabetArr = action.order ?\r\n                sortAsc(sortByAlphabetState.filteredMovies, action.item) :\r\n                sortDesc(sortByAlphabetState.filteredMovies, action.item);\r\n            sortByAlphabetState.filteredMovies = sortedAlphabetArr;\r\n            return sortByAlphabetState;\r\n\r\n        case LOAD_EXACT_PAGE:\r\n            const exactPageState = Object.assign({}, state);\r\n            const initMoviesLoad = exactPageState.movies\r\n            const exactPage = action.payload;\r\n            let upperCountExact = exactPageState.countPerPage * exactPage\r\n            let lowerCountExact = upperCountExact - exactPageState.countPerPage;\r\n            let exactMovies = exactPageState.movies.slice(lowerCountExact, upperCountExact);\r\n            exactPageState.filteredMovies = exactMovies;\r\n            exactPageState.currentCount = upperCountExact;\r\n            exactPageState.currentPage = exactPage;\r\n            exactPageState.searching = false;\r\n            window.history.pushState({ page: 1 }, \"title 1\", `?page=${exactPageState.currentPage}`);\r\n            exactPageState.movies = initMoviesLoad\r\n\r\n            return exactPageState;\r\n\r\n        case MOVIES_PER_PAGE:\r\n            const moviesPerPageState = Object.assign({}, state)\r\n            const initMoviesMPP = moviesPerPageState.movies\r\n            moviesPerPageState.currentPage = 1\r\n            moviesPerPageState.countPerPage = action.payload\r\n            moviesPerPageState.currentCount = moviesPerPageState.totalCount\r\n            moviesPerPageState.filteredPages = Math.ceil(moviesPerPageState.currentCount / moviesPerPageState.countPerPage)\r\n            moviesPerPageState.totalPages = moviesPerPageState.filteredPages\r\n            let currentPageMPP = moviesPerPageState.currentPage\r\n            let upperCountMPP = moviesPerPageState.countPerPage * currentPageMPP\r\n            let lowerCountMPP = upperCountMPP - moviesPerPageState.countPerPage;\r\n            let exactMPP = moviesPerPageState.movies.slice(lowerCountMPP, upperCountMPP);\r\n            moviesPerPageState.filteredMovies = exactMPP;\r\n            moviesPerPageState.currentCount = upperCountMPP;\r\n            moviesPerPageState.lowerCount = lowerCountMPP;\r\n            moviesPerPageState.upperCount = upperCountMPP;\r\n            moviesPerPageState.movies = initMoviesMPP\r\n\r\n            return moviesPerPageState\r\n\r\n        case SET_FIRST_NAME:\r\n            const firstNameState = Object.assign({}, state)\r\n            firstNameState.firstName = action.payload\r\n            console.log(firstNameState)\r\n            return firstNameState\r\n\r\n        case DATABASE_SET:\r\n            databaseSet(state.movies)\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n        case SET_NEW_MOVIE:\r\n            const newMovieState = Object.assign({}, state)\r\n            console.log(action.payload)\r\n            console.log(newMovieState.filteredMovies)\r\n            let newFiltered = newMovieState.filteredMovies\r\n            let newMovies = newMovieState.movies\r\n            newFiltered.unshift(action.payload)\r\n            newMovies.unshift(action.payload)\r\n            newMovieState.filteredMovies = newFiltered\r\n            newMovieState.movies = newMovies\r\n\r\n            return newMovieState\r\n\r\n        case REMOVE_MOVIE:\r\n            const removeMovieState = Object.assign({}, state)\r\n            let removedMovie=''\r\n            let filteredRemoved = removeMovieState.filteredMovies.filter(movie => movie.originalTitle !== removeMovieState.filteredMovies[action.index].originalTitle)\r\n            for (let k=0; k < removeMovieState.movies.length; k++){\r\n            if(action.originalTitle === removeMovieState.movies[k].originalTitle ){\r\n            removedMovie=removeMovieState.movies.filter(movie => movie !== removeMovieState.movies[k])\r\n        }}\r\n            removeMovieState.movies = removedMovie\r\n            removeMovieState.filteredMovies = filteredRemoved\r\n            console.log(removeMovieState.filteredMovies)\r\n            return removeMovieState\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nfunction addFilterIfNotExists(filter, appliedFilters) {\r\n    let index = appliedFilters.indexOf(filter);\r\n    if (index === -1) appliedFilters.push(filter);\r\n\r\n    return appliedFilters;\r\n}\r\n\r\nfunction removeFilter(filter, appliedFilters) {\r\n    let index = appliedFilters.indexOf(filter);\r\n    appliedFilters.splice(index, 1);\r\n    return appliedFilters;\r\n}\r\n\r\nfunction databaseSet(movies) {\r\n    return firebase.database().ref(localStorage.userId + \"/\").set(movies)\r\n}\r\n\r\nfunction sortAsc(arr, field) {\r\n    return arr.sort(function (a, b) {\r\n        if (a[field] > b[field]) {\r\n            return 1;\r\n        }\r\n        if (b[field] > a[field]) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    })\r\n}\r\n\r\nfunction sortDesc(arr, field) {\r\n    return arr.sort(function (a, b) {\r\n        if (a[field] > b[field]) return -1;\r\n\r\n        if (b[field] > a[field]) return 1;\r\n\r\n        return 0;\r\n    })\r\n}","C:\\React\\react-movies-database-main\\src\\SignIn\\Auth.js",[],"C:\\React\\react-movies-database-main\\src\\redux\\actions.js",[],"C:\\React\\react-movies-database-main\\src\\redux\\types.js",[],"C:\\React\\react-movies-database-main\\src\\Spinner\\Spinner.js",[],"C:\\React\\react-movies-database-main\\src\\SignIn\\SignInCard.js",["93","94","95"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport './SignInCard.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from 'firebase';\nimport { useDispatch } from 'react-redux'\nimport { getMovies, setDatabase } from '../redux/actions';\n\nconst SignInCard = () => {\n  const dispatch = useDispatch()\n  let [switchSignIn, setSwitchSignIn] = useState(true)\n  let [email, setEmail] = useState('')\n  let [password, setPassword] = useState('')\n  let [firstName, setFirstName] = useState('')\n  let [errors, setErrors] = useState({\n    email: '',\n    password: ''\n  })\n  let history = useHistory()\n  useEffect(() => {\n    dispatch(getMovies())\n  }, [])\n\n  const emailInputHandler = (event) => {\n    setEmail(event.target.value)\n  }\n  const passwordInputHandler = (event) => {\n    setPassword(event.target.value)\n  }\n  const firstNameInputHandler = (event) => {\n    setFirstName(event.target.value)\n  }\n\n  const validateEmail = (email) => {\n    let isValid = true;\n    if (email) {\n      setErrors({ email: \"\" })\n    }\n    if (typeof email !== \"undefined\") {\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n      if (!pattern.test(email)) {\n        isValid = false;\n        setErrors({ email: \"Please enter a valid Email Address.\" })\n      }\n    }\n    return isValid;\n  }\n\n  const validatePassword = (password) => {\n    let isValid = true;\n    if (password) {\n      setErrors({ password: \"\" })\n    }\n    if (typeof password !== \"undefined\") {\n      var reg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,32}$/\n      var test = reg.test(password)\n      if (!test) {\n        isValid = false;\n        setErrors({ password: \"Please enter a valid password\" })\n      }\n      return isValid;\n    }\n  }\n  const SwitchSignInHandler = () => {\n    setSwitchSignIn(!switchSignIn)\n  }\n\n  const onSignUpHandler = (event) => {\n    event.preventDefault()\n    validateEmail(email) && validatePassword(password)\n    firebase.auth().createUserWithEmailAndPassword(email, password).then((userCredential) => {\n      var user = firebase.auth().currentUser\n      user.updateProfile({\n        displayName: firstName})\n      dispatch(getMovies())\n      localStorage.setItem('userId', userCredential.user.uid)\n      history.push('/auth')\n      dispatch(setDatabase())\n      setSwitchSignIn(true)\n      firebase.auth().signOut()\n      alert(\"You are signed up succesfully, please Login\")\n    })\n      .catch((error) => {\n        console.log(error)\n      });\n  }\n\n  const onSignInHandler = (event) => {\n    event.preventDefault()\n    dispatch(getMovies())\n    validateEmail(email) && validatePassword(password)\n    var user = firebase.auth().currentUser;\n    if (user) {\n      console.log(\"user is already signed in\")\n      history.push('/home')\n    } \n    else {\n      firebase.auth().signInWithEmailAndPassword(email, password)\n        .then((userCredential) => {\n          console.log(userCredential.user)\n          localStorage.setItem('firstName', userCredential.user.displayName)\n          localStorage.setItem('userId', userCredential.user.uid)\n          localStorage.setItem('isAuth', true)\n          history.push('/home')\n        })\n        .catch((error) => {\n          console.log(error)\n          alert(error)\n        });\n    }\n  }\n\n  let button = !switchSignIn ? (<button\n    variant=\"primary\"\n    type=\"submit\"\n    onClick={onSignUpHandler}\n  >\n    Sign Up !\n  </button>) :\n    (\n      <button\n        variant=\"primary\"\n        type=\"submit\"\n        onClick={onSignInHandler}\n      >\n        Sign In !\n      </button>)\n\n  let signMessage = switchSignIn ? (\n    <a>Please Sign In</a>\n  ) :\n    <a>Please Sign Up</a>\n\n  let switchButton = (\n    <button\n      type=\"button\"\n      class=\"btn btn-success\"\n      onClick={SwitchSignInHandler}>Swtich to {!switchSignIn ? 'Sign In' : \"Sign Up\"}</button>\n  )\n\n  let signCard = (\n    <div class='SignInWrapper'>\n      <div>\n        <div controlId=\"formBasicEmail\">\n          {signMessage}\n          {!switchSignIn ?\n            <div controlId=\"formBasicEmail\">\n              <input\n                type=\"text\"\n                placeholder=\"First Name\"\n                onChange={firstNameInputHandler}\n              />\n            </div>\n            : null}\n          <div></div>\n          <input\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={emailInputHandler}\n          />\n          <div className=\"text-danger\">{errors.email}</div>\n        </div>\n        <div controlId=\"formBasicPassword\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={passwordInputHandler}\n          />\n          <div className=\"text-danger\">{errors.password}</div>\n        </div>\n        <div controlId=\"formBasicCheckbox\">\n          {switchSignIn ? <div type=\"checkbox\" label=\"Remember Me\" /> : null}\n        </div>\n        <div>{button}</div>\n        <div>{switchButton}</div>\n      </div>\n    </div>\n  )\n  console.warn = console.error = () => { };\n  return (\n    localStorage.isAuth ? <Redirect to={'/table'} /> : signCard\n  )\n}\n\nexport default SignInCard;","C:\\React\\react-movies-database-main\\src\\Table\\Table.js",[],["96","97"],"C:\\React\\react-movies-database-main\\src\\firebase\\config.js",[],"C:\\React\\react-movies-database-main\\src\\Table\\TableHeader.js",[],"C:\\React\\react-movies-database-main\\src\\Navigation\\Pagination.js",[],"C:\\React\\react-movies-database-main\\src\\Table\\TableData.js",["98","99","100","101","102"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setWatched, setDatabase, removeMovie, loadExactPage } from '../redux/actions'\r\n\r\nconst TableData = () => {\r\n \r\n  const dispatch = useDispatch()\r\n  const filtered = useSelector(state => (state.filteredMovies))\r\n  const state = useSelector(state => (state)) //filtered is not re-rendering without it\r\n\r\n  const checkBox = (\r\n    <div class=\"form-check\">\r\n      <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"exampleRadios1\" value={filtered} />\r\n      <label class=\"form-check-label\" for=\"exampleRadios1\">\r\n        Not Watched\r\n          </label>\r\n    </div>)\r\n\r\n  const onClickHandler = (index, ranked) => {\r\n    dispatch(setWatched(index, ranked))\r\n    dispatch(setDatabase())\r\n  }\r\n\r\n  const removeMovieFunction = (index, ranked) => {\r\n    dispatch(removeMovie(index, ranked))\r\n    dispatch(setDatabase())\r\n  }\r\n\r\n  return (\r\n    filtered.map((st, index) => {\r\n      const { ranked, releaseDate, imdbRating, originalTitle, year, watched } = st\r\n      if (localStorage.isAuth) {\r\n        return (\r\n          <tr key={releaseDate}>\r\n            <td>{imdbRating}</td>\r\n            <td>{originalTitle}</td>\r\n            <td>{year}</td>\r\n            <td>{watched ? <a onClick={() => onClickHandler(index, ranked)}> ✔️ Watched </a> : <a onClick={() => onClickHandler(index, ranked)}>{checkBox}</a>}</td>\r\n            <td><button class=\"delete has-background-danger\" onClick={() => removeMovieFunction(index, originalTitle)}></button></td>\r\n          </tr>\r\n  \r\n        )\r\n      }\r\n      else return (\r\n        <tr key={releaseDate}>\r\n          <td>{imdbRating}</td>\r\n          <td>{originalTitle}</td>\r\n          <td>{year}</td>\r\n        </tr>\r\n      )\r\n    })\r\n  )\r\n}\r\n\r\nexport default TableData ","C:\\React\\react-movies-database-main\\src\\Navigation\\PerPageSelector.js",[],"C:\\React\\react-movies-database-main\\src\\AddMovie\\AddMovie.js",["103","104","105","106"],"import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport TableHeader from '../Table/TableHeader'\r\nimport TableData from '../Table/TableData'\r\nimport { useDispatch } from 'react-redux';\r\nimport { getMovies, setDatabase, newMovieAddition } from '../redux/actions'\r\nimport \"bulma/css/bulma.min.css\"\r\nimport NavCool from '../Navigation/NavCool';\r\nimport AddInput from './AddInput'\r\n\r\nconst AddMovie = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getMovies())\r\n    }, [])\r\n\r\n    return (\r\n        localStorage.isAuth ? <div>\r\n            <NavCool />\r\n            <AddInput />\r\n            <div class='box px-6'>\r\n                <div class='px-6'>\r\n                    <h3>Recently Added Movies</h3>\r\n                    <table class={\"table table-bordered text-center\"}>\r\n                        <thead class=\"thead-dark\"> \r\n                            <TableHeader />\r\n                        </thead>\r\n                        <tbody>\r\n                            <TableData />\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div> : <Redirect to={'/auth'} />\r\n    )\r\n}\r\n\r\nexport default AddMovie;","C:\\React\\react-movies-database-main\\src\\Navigation\\Navbar.js",[],["107","108"],"C:\\React\\react-movies-database-main\\src\\Navigation\\NavCool.js",["109","110","111","112","113"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterByValue, loadExactPage } from '../redux/actions'\r\nimport firebase from 'firebase'\r\n\r\nconst NavCool = () => {\r\n    const dispatch = useDispatch()\r\n    const currentPage = useSelector(state => state.currentPage)\r\n    let history = useHistory()\r\n\r\n    const filterByInput = (event) => {\r\n        let input = event.target.value.toLowerCase()\r\n        if(!event.target.value){\r\n          dispatch(loadExactPage(currentPage))}\r\n        dispatch(filterByValue({ value: input }))\r\n      }\r\n\r\n      const useStyles = makeStyles((theme) => ({\r\n        grow: {\r\n          flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n          marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n          display: 'none',\r\n          padding: '10px',\r\n          [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n          },\r\n        },\r\n        search: {\r\n          position: 'relative',\r\n          borderRadius: theme.shape.borderRadius,\r\n          backgroundColor: fade(theme.palette.common.white, 0.15),\r\n          '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n          },\r\n          marginRight: theme.spacing(),\r\n          marginLeft: 0,\r\n          width: '100%',\r\n          [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n          },\r\n        },\r\n        searchIcon: {\r\n          padding: theme.spacing(0, 2),\r\n          height: '100%',\r\n          position: 'absolute',\r\n          pointerEvents: 'none',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n          color: 'inherit',\r\n        },\r\n        inputInput: {\r\n          padding: theme.spacing(1, 1, 1, 0),\r\n          // vertical padding + font size from searchIcon\r\n          paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n          transition: theme.transitions.create('width'),\r\n          width: '100%',\r\n          [theme.breakpoints.up('md')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n              width: '20ch',\r\n            },\r\n          },\r\n        },\r\n        sectionDesktop: {\r\n          display: 'none',\r\n          [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n          },\r\n        },\r\n        sectionMobile: {\r\n          display: 'flex',\r\n          [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n          },\r\n        },\r\n      }));\r\n\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n      const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n\r\n      const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n      };\r\n\r\n      const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n      };\r\n\r\n      const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n      };\r\n      \r\n      const goToNewMovies = () => {\r\n        history.push('/add-movie')\r\n      }\r\n\r\n      const goToHomeTable = () => {\r\n        history.push('/')\r\n      }\r\n\r\n      const onLoginHandler = () => {\r\n        history.push('/auth')\r\n      }\r\n    \r\n      const onLogoutHandler = () => {\r\n        firebase.auth().signOut()\r\n        localStorage.removeItem('userId')\r\n        localStorage.removeItem('isAuth')\r\n        localStorage.removeItem('firstName')\r\n        history.push('/auth')\r\n      }\r\n    \r\n      const menuId = 'primary-search-account-menu';\r\n      const renderMenu = (\r\n        <Menu\r\n          anchorEl={anchorEl}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          id={menuId}\r\n          keepMounted\r\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          open={isMenuOpen}\r\n          onClose={handleMenuClose}\r\n        >\r\n          <MenuItem onClose={handleMenuClose}>My Account</MenuItem>\r\n          <MenuItem onClose={handleMenuClose}\r\n                    onClick={onLogoutHandler}>Logout</MenuItem>\r\n        </Menu>\r\n      );\r\n\r\n      const mobileMenuId = 'primary-search-account-menu-mobile';\r\n      const renderMobileMenu = (\r\n        <Menu\r\n          anchorEl={mobileMoreAnchorEl}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          id={mobileMenuId}\r\n          keepMounted\r\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          open={isMobileMenuOpen}\r\n          onClose={handleMobileMenuClose}\r\n        >\r\n          <MenuItem>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <p>Messages</p>\r\n          </MenuItem>\r\n          <MenuItem>\r\n            <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={11} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <p>Notifications</p>\r\n          </MenuItem>\r\n          <MenuItem onClick={handleProfileMenuOpen}>\r\n            <IconButton\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"primary-search-account-menu\"\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <p>Profile</p>\r\n          </MenuItem>\r\n        </Menu>\r\n      );\r\n\r\n\r\n      return (\r\n        <div className={classes.grow}>\r\n          <AppBar style={{ background: '#2E3B55' }} position=\"static\">\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                className={classes.menuButton}\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n              >\r\n                  RMD\r\n              </IconButton>\r\n              <Button color=\"inherit\" edge=\"start\"\r\n                className={classes.menuButton}\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={goToHomeTable}\r\n                >\r\n                Home\r\n              </Button>\r\n              <Button color=\"inherit\" edge=\"start\"\r\n                className={classes.menuButton}\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={goToNewMovies}\r\n                >\r\n                New Movies\r\n              </Button>\r\n              <div className={classes.grow} />\r\n              <div className={classes.search}>\r\n                <div className={classes.searchIcon}>\r\n                  <SearchIcon />\r\n                </div>\r\n                <InputBase\r\n                  placeholder=\"Search…\"\r\n                  classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                  }}\r\n                  inputProps={{ 'aria-label': 'search' }}\r\n                  onChange={(e) => filterByInput(e)}\r\n                />\r\n              </div>\r\n              <div className={classes.sectionDesktop}>\r\n               {localStorage.isAuth ? <div>\r\n               <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                  <Badge badgeContent={0} color=\"secondary\">\r\n                    <MailIcon />\r\n                  </Badge>\r\n                </IconButton>\r\n                <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                  <Badge badgeContent={0} color=\"secondary\">\r\n                    <NotificationsIcon />\r\n                  </Badge>\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleProfileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton> </div> : null}\r\n              </div>\r\n              <div className={classes.sectionMobile}>\r\n                <IconButton\r\n                  aria-label=\"show more\"\r\n                  aria-controls={mobileMenuId}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleMobileMenuOpen}\r\n                  color=\"inherit\"\r\n                >\r\n                  <MoreIcon />\r\n                </IconButton>\r\n              </div>\r\n             {!localStorage.isAuth ? <Button color=\"inherit\">Login</Button> : null} \r\n            </Toolbar>\r\n          </AppBar>\r\n          {renderMobileMenu}\r\n          {renderMenu}\r\n        </div>\r\n      );\r\n\r\n}\r\n\r\nexport default NavCool;","C:\\React\\react-movies-database-main\\src\\AddMovie\\AddInput.js",["114"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { positions } from '@material-ui/system';\r\nimport Box from '@material-ui/core/Box';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setDatabase, newMovieAddition } from '../redux/actions'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst AddInput = () =>{\r\nconst dispatch = useDispatch()\r\n\r\nlet [newMovie, setNewMovie] = useState({\r\n    imdbRating: '',\r\n    originalTitle: '',\r\n    year: '',\r\n    watched: null\r\n})\r\n\r\nconst addMovieRating = (event) => {\r\n    setNewMovie({\r\n        ...newMovie,\r\n        imdbRating: event.target.value\r\n    })\r\n}\r\nconst addMovieTitle = (event) => {\r\n    setNewMovie({\r\n        ...newMovie,\r\n        originalTitle: event.target.value\r\n    })\r\n}\r\nconst addMovieYear = (event) => {\r\n    setNewMovie({\r\n        ...newMovie,\r\n        year: event.target.value\r\n    })\r\n}\r\n\r\nconst addNewMovie = () => {\r\n    dispatch(newMovieAddition(newMovie))\r\n    dispatch(setDatabase())\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n    const handleChange = (event) => {\r\n    if (event.target.value === \"Watched\") {\r\n        setNewMovie({\r\n            ...newMovie,\r\n            watched: true\r\n        })\r\n    }\r\n    else {\r\n        setNewMovie({\r\n            ...newMovie,\r\n            watched: false\r\n        })\r\n    }\r\n    }\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box width=\"100%\" m={+2} mx={34}>\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField id=\"outlined-basic\" label=\"IMDB Rating...\" variant=\"outlined\" onChange={addMovieRating}/>\r\n      <TextField id=\"outlined-basic\" label=\"Movie Title...\" variant=\"outlined\" onChange={addMovieTitle}/>\r\n      <TextField id=\"outlined-basic\" label=\"Year...\" variant=\"outlined\" onChange={addMovieYear}/>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-outlined-label\">Select Watched...</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-outlined-label\"\r\n          id=\"demo-simple-select-outlined\"\r\n          onChange={handleChange}\r\n          label=\"Watched\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={\"Watched\"}>Watched</MenuItem>\r\n          <MenuItem value={\"Not Watched\"}>Not Watched</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </form>\r\n    <Box width=\"100%\" mx={50} m={+2} >\r\n    <Button variant=\"contained\" onClick={addNewMovie}>Add Movie</Button>\r\n    </Box>\r\n    </Box>\r\n  );\r\n}\r\nexport default AddInput","C:\\React\\react-movies-database-main\\src\\Table\\MaterialTable.js",["115","116","117","118","119","120","121","122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":16,"column":5,"nodeType":"130","endLine":16,"endColumn":7,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":13},{"ruleId":"136","severity":1,"message":"137","line":17,"column":1,"nodeType":"138","endLine":158,"endColumn":2},{"ruleId":"128","severity":1,"message":"129","line":22,"column":6,"nodeType":"130","endLine":22,"endColumn":8,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":130,"column":5,"nodeType":"142","endLine":130,"endColumn":8},{"ruleId":"140","severity":1,"message":"141","line":132,"column":5,"nodeType":"142","endLine":132,"endColumn":8},{"ruleId":"124","replacedBy":"143"},{"ruleId":"126","replacedBy":"144"},{"ruleId":"132","severity":1,"message":"145","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},{"ruleId":"132","severity":1,"message":"146","line":3,"column":48,"nodeType":"134","messageId":"135","endLine":3,"endColumn":61},{"ruleId":"132","severity":1,"message":"147","line":9,"column":9,"nodeType":"134","messageId":"135","endLine":9,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":38,"column":28,"nodeType":"142","endLine":38,"endColumn":77},{"ruleId":"140","severity":1,"message":"141","line":38,"column":96,"nodeType":"142","endLine":38,"endColumn":145},{"ruleId":"132","severity":1,"message":"148","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"149","line":6,"column":21,"nodeType":"134","messageId":"135","endLine":6,"endColumn":32},{"ruleId":"132","severity":1,"message":"150","line":6,"column":34,"nodeType":"134","messageId":"135","endLine":6,"endColumn":50},{"ruleId":"128","severity":1,"message":"129","line":15,"column":8,"nodeType":"130","endLine":15,"endColumn":10,"suggestions":"151"},{"ruleId":"124","replacedBy":"152"},{"ruleId":"126","replacedBy":"153"},{"ruleId":"132","severity":1,"message":"154","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":18},{"ruleId":"132","severity":1,"message":"155","line":10,"column":8,"nodeType":"134","messageId":"135","endLine":10,"endColumn":16},{"ruleId":"132","severity":1,"message":"156","line":135,"column":13,"nodeType":"134","messageId":"135","endLine":135,"endColumn":27},{"ruleId":"157","severity":1,"message":"158","line":220,"column":17,"nodeType":"159","endLine":220,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":228,"column":17,"nodeType":"159","endLine":228,"endColumn":32},{"ruleId":"132","severity":1,"message":"160","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":19},{"ruleId":"132","severity":1,"message":"161","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"162","line":22,"column":35,"nodeType":"134","messageId":"135","endLine":22,"endColumn":46},{"ruleId":"132","severity":1,"message":"146","line":22,"column":48,"nodeType":"134","messageId":"135","endLine":22,"endColumn":61},{"ruleId":"132","severity":1,"message":"163","line":160,"column":25,"nodeType":"134","messageId":"135","endLine":160,"endColumn":31},{"ruleId":"132","severity":1,"message":"164","line":160,"column":33,"nodeType":"134","messageId":"135","endLine":160,"endColumn":44},{"ruleId":"132","severity":1,"message":"165","line":160,"column":46,"nodeType":"134","messageId":"135","endLine":160,"endColumn":56},{"ruleId":"132","severity":1,"message":"166","line":160,"column":58,"nodeType":"134","messageId":"135","endLine":160,"endColumn":71},{"ruleId":"132","severity":1,"message":"167","line":160,"column":73,"nodeType":"134","messageId":"135","endLine":160,"endColumn":77},{"ruleId":"132","severity":1,"message":"168","line":160,"column":79,"nodeType":"134","messageId":"135","endLine":160,"endColumn":86},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["171"],"no-unused-vars","'act' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["172"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["169"],["170"],"'useEffect' is defined but never used.","'loadExactPage' is defined but never used.","'state' is assigned a value but never used.","'useState' is defined but never used.","'setDatabase' is defined but never used.","'newMovieAddition' is defined but never used.",["173"],["169"],["170"],"'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'onLoginHandler' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'positions' is defined but never used.","'setState' is defined but never used.","'removeMovie' is defined but never used.","'ranked' is assigned a value but never used.","'releaseDate' is assigned a value but never used.","'imdbRating' is assigned a value but never used.","'originalTitle' is assigned a value but never used.","'year' is assigned a value but never used.","'watched' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"174","fix":"176"},{"desc":"174","fix":"177"},"Update the dependencies array to be: [dispatch]",{"range":"178","text":"179"},{"range":"180","text":"179"},{"range":"181","text":"179"},[517,519],"[dispatch]",[719,721],[551,553]]